{"version":3,"sources":["Images/logout.png","Images/photo.jpg","redux_store/actions/authenticate.js","redux_store/actions/actionType.js","redux_store/actions/dataAction.js","components/Navbar.js","components/Restaurants.js","components/Login.js","Containers/LoginForm.js","components/Signup.js","Containers/SignupLayout.js","components/Profilecard.js","redux_store/actions/filterAction.js","redux_store/actions/friendRequest.js","components/Profile.js","components/profileInfo.js","components/SetImage.js","components/Connections.js","components/FriendRequest.js","components/EmptyNav.js","Containers/EditProfile.js","Containers/UpdateProfilePhoto.js","components/RestaurantMenu.js","components/SetRestaurant.js","routes.js","App.js","serviceWorker.js","redux_store/utility.js","redux_store/reducers/authenticate.js","redux_store/reducers/dataReducer.js","redux_store/reducers/filterReducer.js","redux_store/reducers/friendRequestReducer.js","index.js","Images/logo.png"],"names":["module","exports","existed","login","email","password","dispatch","id","authStart","axios","post","then","response","authToken","data","access","streamToken","console","log","localStorage","setItem","stream","setDefaultFilter","authSuccess","catch","err","authFail","token","user_profile","headers","Authorization","type","error","logout","removeItem","restProcessSuccess","setImageSuccess","image","getProfileDataSuccess","getDataFail","dataError","getRestaurantData","setAbout","phone_number","birth_date","gender","what_you_crave_for","settingId","getItem","user_settings","uploadImage","userImage","userID","aboutId","restaurantId","formData","FormData","append","name","accept","getImage","get","authorization","getUser","getRestaurants","getRestaurantMenu","NavBar","props","handleLogout","bind","this","onLogout","getProfileImage","Navbar","fixed","sticky","inverse","style","zIndex","NavbarBrand","href","Image","src","require","height","width","paddingLeft","Nav","className","Item","padding","to","onClick","justify","roundedCircle","textDecoration","display","justifyContent","alignContent","alignItems","loadingImage","color","size","React","Component","connect","state","dataReducer","imageLoading","actions","profileActions","Restaurants","handleSearchChange","event","setState","searchItem","target","value","search","preventDefault","getSearchResult","getRestaurant","getMenu","restaurants","restaurant","map","Col","key","md","Card","margin","overflow","borderRadius","Img","variant","restaurant_image","cap","ImgOverlay","Body","fontStyle","flexDirection","position","price_category","address","phone_no","pathname","restaurantID","Button","background","border","getRestaurantId","offsetTop","boxShadow","InputGroup","marginLeft","marginRight","FormControl","placeholder","aria-label","onChange","Append","Row","noGutters","dataActions","item","Login","handleEmailChange","handlePasswordChange","handleSubmit","onAuth","loading","CardBody","Form","onSubmit","FormGroup","Label","Input","invalid","FormFeedback","isAuthenticated","authenticate","LoginForm","Signup","handleChangeName","isNaN","charAt","length","nameError","buttonDisable","submitButtonDisable","mailError","passwordError","confirmPasswordError","handleChangeEmail","EmailValidator","handleChangePassword","schema","validate","consirmDisabled","confirmPassword","handleChangeConfirmPassword","passwordOk","handleSignUp","onSignUp","handleRedirect","redirect","PasswordValidator","is","min","max","has","digits","not","spaces","oneOf","undefined","redirectTo","form","required","valid","disabled","fullName","SignupLayout","ProfileCard","UncontrolledTooltip","placement","dataLoading","Title","textAlign","users","Text","fontWeight","Container","Badge","pill","marginTop","setFilterSuccess","filterInfo","requestFail","getListFail","Profile","getGender","handleChangeTime","time","sendRequest","requestID","index","sendFriendRequest","array","suggestionListData","createRestaurantMenu","menuList","foodItemName","DropdownItem","selectMenu","item_name","toggle","dropDownOpen","select","selectedRestaurant","innerText","foodMenuUpdate","selectedMenu","toggleMenu","menuOpen","toggleTime","timeOpen","selectTime","selectedTime","handleSettingSubmit","updateFilterData","myProfile","user_id","filterSettings","reload","settingUpdate","suggestionUpdate","restaurantList","foodMenu","getMyProfile","getUserSuggestions","getFilterInfo","userSuggestion","Header","user_age","restaurant_name","menu_choice","filterSettingLoading","createRestaurantList","eating_time","suggestionLoading","createSuggestionList","menuLoading","window","location","xs","filterLoading","as","Dropdown","isOpen","DropdownToggle","caret","DropdownMenu","updateFilterLoading","profileLoading","filterReducer","suggestion","filterDataLoading","restMenu","restaurantMenuLoading","filterUpdateLoading","Id","userId","restaurantName","menuChoice","eatingTime","filterId","resName","put","filterActions","Info","handleChangePhoneNumber","phoneNumberValidity","phoneNumber","phoneNumberValid","buttonDisabled","formValidation","birthDateError","foodChoiceError","handleChangeBirthDate","formdate","birthDate","birthDateValidation","handleChangeFoodChoice","foodChoice","foodChoiceValidity","td","formatDate","date","moment","format","userGender","onComplete","completionLoading","phone","selectedDate","Date","currentYear","year","phoneNum","CardHeader","fontSize","paddingRight","country","autoFormat","enableLongNumbers","isValid","for","settingID","SetImage","handleChangeImage","imageData","concat","buttonName","setButtonName","profileData","setImageData","restID","getProfile","getResSetting","submitImageLoading","noValidate","withIcon","buttonText","imgExtension","maxFileSize","singleImage","withLabel","withPreview","buttonStyles","fileContainerStyle","setImageLoading","resSetting","Connections","getFriendList","friendList","paddingTop","friendRequestReducer","FriendRequests","acceptRequest","acceptFriendRequest","rejectRequest","rejectFriendRequest","getRequests","requestList","requestLists","friendRequestAction","EmptyNav","EditProfile","updateProfileAbout","userData","getProfileAbout","settingsId","favouriteFood","favourite_food","UpdateProfilePhoto","updatePhoto","alert","getUserAbout","uploadLoading","userProfile","userAbout","RestaurantMenu","handleChange","searcheItem","menu","menuAvail","getRestMenu","restaurantMenu","category_name","price","SetRestaurant","handleChangeRestaurantName","handleChangeFood","food","setRestSetting","menuUpdate","availRestaurant","updateRestaurant","getUserProfile","getExistedRestaurants","settingLoading","resSettingLoading","menuItem","BaseRouter","exact","path","component","AuthRouter","App","autoSignUp","isLoading","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","updateObject","oldObject","updatedProperties","initialState","action","authLogout","reducer","restaurantProccessStart","restaurantProccessSuccess","getDataStart","profileDataStart","profileDataSuccess","getDataSuccess","getUserData","setImageStart","getImageDataStart","getImageDataSuccess","getRestaurantsMenuStart","getRestaurantsMenuSuccess","filterError","getFilteredStart","getFilterSuccess","setFilterStart","getFilterSetting","getFilterSettingStart","filterFail","getListStart","requestStart","requestSuccesss","getListSuccess","getRequestListSuccess","masterReducer","combineReducers","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.97619563.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logout.bdcd23de.png\";","module.exports = __webpack_public_path__ + \"static/media/photo.2209c857.jpg\";","import axios from \"axios\";\r\nimport * as actionType from \"./actionType\";\r\n\r\nconst existed = \"user profile with this email already exists.\";\r\n\r\nconst login = (email, password, dispatch, id) => {\r\n  dispatch(authStart());\r\n  axios\r\n    .post(\"http://127.0.0.1:8000/api/token/\", {\r\n      email: email,\r\n      password: password\r\n    })\r\n    .then(response => {\r\n      const authToken = response.data.access;\r\n      const streamToken = response.data;\r\n      console.log(\"analyze token\" + streamToken);\r\n      localStorage.setItem(\"stream\", response.data.stream);\r\n      localStorage.setItem(\"token\", authToken);\r\n      setDefaultFilter(id, authToken);\r\n      dispatch(authSuccess(authToken));\r\n    })\r\n    .catch(err => {\r\n      dispatch(authFail(err));\r\n    });\r\n};\r\n\r\nconst setDefaultFilter = (id, token) => {\r\n  axios\r\n    .post(\r\n      \"http://127.0.0.1:8000/api/profilesettings/\",\r\n      {\r\n        user_profile: id\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }\r\n    )\r\n    .then(response => {\r\n      console.log(response.data);\r\n    });\r\n};\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionType.AUTH_START\r\n  };\r\n};\r\n\r\nexport const authSuccess = token => {\r\n  return {\r\n    type: actionType.AUTH_SUCCESS,\r\n    token: token\r\n  };\r\n};\r\n\r\nexport const authFail = error => {\r\n  return {\r\n    type: actionType.AUTH_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"stream\");\r\n  return {\r\n    type: actionType.AUTH_LOGOUT\r\n  };\r\n};\r\n\r\nexport const authLogin = (email, password) => {\r\n  return dispatch => {\r\n    login(email, password, dispatch);\r\n  };\r\n};\r\n\r\nexport const authSignUp = (fullName, email, password) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/api/profile/\", {\r\n        name: fullName,\r\n        email: email,\r\n        password: password\r\n      })\r\n      .then(response => {\r\n        if (response === existed) {\r\n          dispatch(authFail(existed));\r\n        } else {\r\n          const id = response.data.id;\r\n          console.log(\r\n            \"email: \" + email + \"password: \" + password + \"id: \" + id\r\n          );\r\n          login(email, password, dispatch, id);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        dispatch(authFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authCheckstate = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token === null || token === undefined) {\r\n      dispatch(logout());\r\n    } else {\r\n      dispatch(authSuccess(token));\r\n    }\r\n  };\r\n};\r\n","export const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const GET_DATA_START = \"GET_DATA_START\";\r\nexport const PROFILE_DATA_START = \"PROFILE_DATA_START\";\r\nexport const PROFILE_DATA_SUCCESS = \"PROFILE_DATA_SUCCESS\";\r\nexport const GET_DATA_SUCCESS = \"GET_DATA_SUCCESS\";\r\nexport const GET_DATA_FAIL = \"GET_DATA_FAIL\";\r\nexport const GET_DATA = \"GET_DATA\";\r\nexport const GET_RESTAURANTS_DATA = \"GET_RESTAURANTS_DATA\";\r\nexport const GET_RESTAURANTS_MENU_START = \"GET_RESTAURANTS_MENU_START\";\r\nexport const GET_RESTAURANTS_MENU_SUCCESS = \"GET_RESTAURANTS_MENU_SUCCESS\";\r\nexport const SET_IMAGE = \"SET_IMAGE\";\r\n\r\nexport const GET_IMAGE_DATA_START = \"GET_IMAGE_DATA_START\";\r\nexport const GET_IMAGE_DATA_SUCCESS = \"GET_IMAGE_DATA_SUCCESS\";\r\nexport const SET_IMAGE_START = \"SET_IMAGE_START\";\r\nexport const SET_IMAGE_SUCCESS = \"SET_IMAGE_SUCCESS\";\r\n\r\nexport const GET_FILTER_START = \" GET_FILTER_START\";\r\nexport const GET_FILTER_SUCCESS = \"GET_FILTER_SUCCESS\";\r\nexport const GET_FILTER_SETTING_START = \"GET_FILTER_SETTING_START\";\r\nexport const GET_FILTER_SETTING = \"GET_FILTER_SETTING\";\r\nexport const SET_FILTER_START = \"SET_FILTER_START\";\r\nexport const SET_FILTER_SUCCESS = \"SET_FILTER_SUCCESS\";\r\nexport const GET_FILTER_FAIL = \"GET_FILTER_FAIL\";\r\n\r\nexport const GET_IMAGE_SUCCESS = \"GET_IMAGE_SUCCESS\";\r\n\r\nexport const GET_LIST = \"GET_LIST\";\r\nexport const GET_LIST_SUCCESS = \"GET_LIST_SUCCESS\";\r\nexport const GET_LIST_FAIL = \"GET_LIST_FAIL\";\r\nexport const GET_REQUEST_LIST_SUCCESS = \"GET_REQUEST_LIST_SUCCESS\";\r\nexport const REQUEST_START = \"REQUEST_START\";\r\nexport const REQUEST_SUCCESS = \"REQUEST_SUCCESS\";\r\nexport const REQUEST_FAIL = \"REQUEST_FAIL\";\r\n\r\nexport const REST_SETTING_START = \"REST_SETTING_START\";\r\nexport const REST_SETTING_SUCCESS = \"REST_SETTING_SUCCESS\";\r\n","import axios from \"axios\";\r\nimport * as actionType from \"./actionType\";\r\n\r\nexport const getDataSuccess = () => {\r\n  return {\r\n    type: actionType.GET_DATA_SUCCESS\r\n  };\r\n};\r\n\r\nexport const restProcessStart = () => {\r\n  return {\r\n    type: actionType.REST_SETTING_START\r\n  };\r\n};\r\n\r\nexport const restProcessSuccess = data => {\r\n  return {\r\n    type: actionType.REST_SETTING_SUCCESS,\r\n    data: { data }\r\n  };\r\n};\r\n\r\nexport const setImageStart = () => {\r\n  return {\r\n    type: actionType.SET_IMAGE_START\r\n  };\r\n};\r\n\r\nexport const setImageSuccess = data => {\r\n  return {\r\n    type: actionType.SET_IMAGE_SUCCESS,\r\n    image: { data }\r\n  };\r\n};\r\n\r\nexport const getImageDataStart = () => {\r\n  return {\r\n    type: actionType.GET_IMAGE_DATA_START\r\n  };\r\n};\r\n\r\nexport const getImageDataSuccess = data => {\r\n  return {\r\n    type: actionType.GET_IMAGE_DATA_SUCCESS,\r\n    image: { data }\r\n  };\r\n};\r\n\r\nexport const getDataStart = () => {\r\n  return {\r\n    type: actionType.GET_DATA_START\r\n  };\r\n};\r\n\r\nexport const getProfileDataStart = () => {\r\n  return {\r\n    type: actionType.PROFILE_DATA_START\r\n  };\r\n};\r\n\r\nexport const getProfileDataSuccess = data => {\r\n  return {\r\n    type: actionType.PROFILE_DATA_SUCCESS,\r\n    data: { data }\r\n  };\r\n};\r\n\r\nexport const getDataFail = error => {\r\n  return {\r\n    type: actionType.GET_DATA_FAIL,\r\n    dataError: error\r\n  };\r\n};\r\n\r\nexport const getData = data => {\r\n  return {\r\n    type: actionType.GET_DATA,\r\n    data: { data }\r\n  };\r\n};\r\n\r\nexport const getRestaurantData = data => {\r\n  return {\r\n    type: actionType.GET_RESTAURANTS_DATA,\r\n    data: data\r\n  };\r\n};\r\n\r\nexport const getRestaurantMenuStart = () => {\r\n  return {\r\n    type: actionType.GET_RESTAURANTS_MENU_START\r\n  };\r\n};\r\n\r\nexport const getRestaurantMenuSuccess = data => {\r\n  return {\r\n    type: actionType.GET_RESTAURANTS_MENU_SUCCESS,\r\n    data: data\r\n  };\r\n};\r\n\r\nexport const completeProfile = (\r\n  phone_number,\r\n  birth_date,\r\n  gender,\r\n  what_you_crave_for\r\n) => {\r\n  return dispatch => {\r\n    dispatch(getProfileDataStart());\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/api/profilesettings/\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        const settingID = response.data[0].id;\r\n        const userID = response.data[0].user_profile;\r\n        console.log(\"userId \" + userID);\r\n        setAbout(\r\n          phone_number,\r\n          birth_date,\r\n          gender,\r\n          what_you_crave_for,\r\n          settingID,\r\n          dispatch\r\n        );\r\n      });\r\n  };\r\n};\r\n\r\nconst setAbout = (\r\n  phone_number,\r\n  birth_date,\r\n  gender,\r\n  what_you_crave_for,\r\n  settingId,\r\n  dispatch\r\n) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  axios\r\n    .post(\r\n      \"http://127.0.0.1:8000/api/profileaboutitem/\",\r\n      {\r\n        user_settings: settingId,\r\n        phone_number: phone_number,\r\n        birth_date: birth_date,\r\n        gender: gender,\r\n        what_you_crave_for: what_you_crave_for\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }\r\n    )\r\n    .then(response => {\r\n      if (response.data != null) {\r\n        console.log(response.data);\r\n        dispatch(getProfileDataSuccess(response.data));\r\n      }\r\n    })\r\n    .catch(err => {\r\n      dispatch(getDataFail(err));\r\n    });\r\n};\r\n\r\nexport const setImage = (userImage, restaurantID) => {\r\n  return dispatch => {\r\n    dispatch(setImageStart());\r\n    const token = localStorage.getItem(\"token\");\r\n    console.log(token);\r\n    console.log(\"res ID: \" + restaurantID);\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/api/profileaboutitem/\", {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        const userId = response.data[0];\r\n        uploadImage(\r\n          userImage,\r\n          userId.user_id,\r\n          userId.id,\r\n          restaurantID,\r\n          token,\r\n          dispatch\r\n        );\r\n      });\r\n  };\r\n};\r\n\r\nconst uploadImage = (\r\n  userImage,\r\n  userID,\r\n  aboutId,\r\n  restaurantId,\r\n  token,\r\n  dispatch\r\n) => {\r\n  const formData = new FormData();\r\n  formData.append(\"user_profile\", userID);\r\n  formData.append(\"user_about\", aboutId);\r\n  formData.append(\"restaurant_card\", restaurantId);\r\n  formData.append(\"image\", userImage, userImage.name);\r\n  console.log(userImage.name);\r\n  axios\r\n    .post(`http://127.0.0.1:8000/api/image/`, formData, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        accept: \"application/json\",\r\n        \"Accept-Language\": \"en-US,en;q=0.8\",\r\n        \"Content-Type\": \"multipart/form-data\"\r\n      }\r\n    })\r\n    .then(response => {\r\n      console.log(response.data);\r\n      dispatch(setImageSuccess(response.data));\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const getImage = () => {\r\n  return dispatch => {\r\n    dispatch(getImageDataStart());\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/api/image/\", {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        console.log(\"gettting image\");\r\n        console.log(response.data[0]);\r\n        dispatch(getImageDataSuccess(response.data[0]));\r\n      });\r\n  };\r\n};\r\n\r\nexport const getUser = () => {\r\n  return dispatch => {\r\n    dispatch(getProfileDataStart());\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/api/profileaboutitem/\", {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        console.log(response.data[0]);\r\n        dispatch(getProfileDataSuccess(response.data[0]));\r\n      })\r\n      .catch(err => {\r\n        dispatch(getDataFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const getRestaurants = () => {\r\n  return dispatch => {\r\n    dispatch(getDataStart());\r\n    console.log(\"getting restaurants\");\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/restaurantapi/restaurant/\")\r\n      .then(response => {\r\n        dispatch(getRestaurantData(response.data));\r\n      })\r\n      .catch(err => {\r\n        dispatch(getDataFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const getSearchedRestaurants = item => {\r\n  return dispatch => {\r\n    dispatch(getDataStart());\r\n    console.log(\"getting restaurants\");\r\n    axios\r\n      .get(`http://127.0.0.1:8000/restaurantapi/restaurant/?search=${item}`)\r\n      .then(response => {\r\n        dispatch(getRestaurantData(response.data));\r\n      })\r\n      .catch(err => {\r\n        dispatch(getDataFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const getRestaurantMenu = id => {\r\n  return dispatch => {\r\n    dispatch(getRestaurantMenuStart());\r\n    axios\r\n      .get(`http://127.0.0.1:8000/restaurantapi/restaurants/${id}/menu/`)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        dispatch(getRestaurantMenuSuccess(response.data));\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateProfile = (\r\n  user_id,\r\n  settingId,\r\n  phone_number,\r\n  birth_date,\r\n  gender,\r\n  favourite_food\r\n) => {\r\n  return dispatch => {\r\n    dispatch(getProfileDataStart());\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .put(\r\n        `http://127.0.0.1:8000/api/profileaboutitem/${user_id}/`,\r\n        {\r\n          id: user_id,\r\n          user_settings: settingId,\r\n          phone_number: phone_number,\r\n          birth_date: birth_date,\r\n          gender: gender,\r\n          what_you_crave_for: favourite_food\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        }\r\n      )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        dispatch(getProfileDataSuccess(response.data));\r\n      })\r\n      .catch(err => {\r\n        dispatch(getDataFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateImage = (userProfile, userAbout, userImage) => {\r\n  return dispatch => {\r\n    dispatch(setImageStart());\r\n    const token = localStorage.getItem(\"token\");\r\n    const formData = new FormData();\r\n    formData.append(\"user_profile\", userProfile);\r\n    formData.append(\"user_about\", userAbout);\r\n    formData.append(\"image\", userImage, userImage.name);\r\n    axios\r\n      .put(`http://127.0.0.1:8000/api/image/${userAbout}/`, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        dispatch(setImageSuccess(response.data));\r\n      })\r\n      .catch(err => {\r\n        dispatch(getDataFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const setRestaurantChoice = (userId, id, resName, menuItem, time) => {\r\n  return dispatch => {\r\n    dispatch(restProcessStart());\r\n    const token = localStorage.getItem(\"token\");\r\n    console.log(\"accesing the function\");\r\n    console.log(\"menu: \" + menuItem);\r\n    console.log(\"menu: \" + time);\r\n    const formData = new FormData();\r\n    formData.append(\"user_profile\", userId);\r\n    formData.append(\"user_about\", id);\r\n    formData.append(\"restaurant_name\", resName);\r\n    formData.append(\"menu_choice\", menuItem);\r\n    formData.append(\"eating_time\", time);\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/api/explorerestaurants/\", formData, {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        console.log(response.data);\r\n        dispatch(restProcessSuccess(response.data));\r\n      });\r\n  };\r\n};\r\n\r\nexport const getRestaurantChoice = () => {\r\n  return dispatch => {\r\n    dispatch(restProcessStart());\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/api/explorerestaurants/\", {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        console.log(response.data[0]);\r\n        dispatch(restProcessSuccess(response.data[0]));\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Navbar, NavbarBrand, Image, Nav } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { DualRing } from \"react-spinners-css\";\r\nimport * as actions from \"../redux_store/actions/authenticate\";\r\nimport * as profileActions from \"../redux_store/actions/dataAction\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../Styles/header.css\";\r\n\r\nexport class NavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n  }\r\n\r\n  handleLogout() {\r\n    this.props.onLogout();\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.getProfileImage();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Navbar\r\n        id=\"navtheme\"\r\n        fixed=\"top\"\r\n        sticky=\"top\"\r\n        inverse\r\n        style={{ zIndex: \"9999\" }}\r\n      >\r\n        <NavbarBrand href=\"/\">\r\n          <Image\r\n            src={require(\"../Images/logo.png\")}\r\n            height=\"39px\"\r\n            width=\"150px\"\r\n            style={{ paddingLeft: \"15px\" }}\r\n          />\r\n        </NavbarBrand>\r\n        <Nav className=\"ml-auto\">\r\n          <Nav.Item style={{ padding: \"10px\" }}>\r\n            <NavLink to=\"/\" onClick={this.handleLogout} justify>\r\n              <Image\r\n                src={require(\"../Images/logout.png\")}\r\n                roundedCircle\r\n                height=\"25px\"\r\n                width=\"25px\"\r\n              />\r\n            </NavLink>\r\n          </Nav.Item>\r\n          <NavLink to=\"/restaurants\" style={{ textDecoration: \"none\" }}>\r\n            <Nav.Item className=\"menuItem\">Explore Restaurants</Nav.Item>\r\n          </NavLink>\r\n          <NavLink to=\"/connections\" style={{ textDecoration: \"none\" }}>\r\n            <Nav.Item className=\"menuItem\">Connections</Nav.Item>\r\n          </NavLink>\r\n          <NavLink to=\"/friendrequest\" style={{ textDecoration: \"none\" }}>\r\n            <Nav.Item className=\"menuItem\">Friend request</Nav.Item>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/\"\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignContent: \"center\",\r\n              alignItems: \"center\"\r\n            }}\r\n            justify\r\n          >\r\n            <Nav.Item\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignContent: \"center\",\r\n                alignItems: \"center\"\r\n              }}\r\n            >\r\n              {this.props.loadingImage ? (\r\n                <DualRing color=\"#FFFFFF\" size={30} />\r\n              ) : (\r\n                <Image\r\n                  src={this.props.image.image}\r\n                  roundedCircle\r\n                  height=\"45px\"\r\n                  width=\"45px\"\r\n                />\r\n              )}\r\n            </Nav.Item>\r\n          </NavLink>\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    image: state.dataReducer.image,\r\n    loadingImage: state.dataReducer.imageLoading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.logout()),\r\n    getProfileImage: () => {\r\n      dispatch(profileActions.getImage());\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\r\n","import React from \"react\";\r\nimport \"../Styles/header.css\";\r\nimport NavBar from \"./Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Button,\r\n  InputGroup,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport * as dataActions from \"../redux_store/actions/dataAction\";\r\nimport { Affix } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Restaurants extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchItem: \"\"\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.getRestaurant();\r\n    console.log(\"calling restaurants\");\r\n  }\r\n\r\n  getRestaurantId(id) {\r\n    this.props.getMenu(id);\r\n  }\r\n\r\n  handleSearchChange = event => {\r\n    this.setState({ searchItem: event.target.value });\r\n  };\r\n\r\n  search = event => {\r\n    event.preventDefault();\r\n    this.props.getSearchResult(this.state.searchItem);\r\n  };\r\n\r\n  render() {\r\n    const restaurants = this.props.restaurant.map(data => (\r\n      <Col key={data.id} md={3}>\r\n        <Card\r\n          style={{\r\n            alignItems: \"left\",\r\n            padding: \"0px\",\r\n            margin: \"10px\",\r\n            width: \"20rem\",\r\n            overflow: \"hidden\",\r\n            alignContent: \"bottom\",\r\n            borderRadius: \"0\"\r\n          }}\r\n        >\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={data.restaurant_image}\r\n            cap\r\n            height=\"200px\"\r\n            width=\"200px\"\r\n            style={{ borderRadius: 0 }}\r\n          />\r\n          <Card.ImgOverlay style={{ padding: \"0px\" }}>\r\n            <Card.Body style={{ padding: \"0px\" }}>\r\n              <h2\r\n                style={{\r\n                  color: \"#F99116\",\r\n                  fontStyle: \"bold\",\r\n                  padding: \"10px\"\r\n                }}\r\n              >\r\n                {data.name}\r\n              </h2>\r\n\r\n              <div\r\n                className=\"card_background\"\r\n                style={{\r\n                  padding: \"15px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  position: \"relative\"\r\n                }}\r\n              >\r\n                <div style={{ fontStyle: \"bold\" }}>\r\n                  Price: {data.price_category}\r\n                </div>\r\n                <div style={{ padding: \"2px\" }}>Location: {data.address}</div>\r\n                <div style={{ padding: \"2px\" }}>Phone: {data.phone_no}</div>\r\n                <NavLink\r\n                  to={{\r\n                    pathname: \"/restaurants/restaurantmenu\",\r\n                    restaurantID: data.id\r\n                  }}\r\n                  style={{\r\n                    display: \"block\",\r\n                    position: \"relative\",\r\n                    textDecoration: \"none\"\r\n                  }}\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      background: \"white\",\r\n                      color: \"#242424\",\r\n                      borderRadius: \"25px\",\r\n                      border: 0,\r\n                      display: \"flex\"\r\n                    }}\r\n                    onClick={this.getRestaurantId.bind(this, data.id)}\r\n                  >\r\n                    View\r\n                  </Button>\r\n                </NavLink>\r\n              </div>\r\n            </Card.Body>\r\n          </Card.ImgOverlay>\r\n        </Card>\r\n      </Col>\r\n    ));\r\n    console.log(\"accessing restaurants\");\r\n    return (\r\n      <div>\r\n        <Affix offsetTop={0}>\r\n          <NavBar />\r\n        </Affix>\r\n\r\n        <div style={{ margin: \"0px\", padding: \"0\" }}>\r\n          <Affix offsetTop={60}>\r\n            <div\r\n              style={{\r\n                background: \"white\",\r\n                boxShadow: \"1px 1px 5px #242424\",\r\n                margin: \"0px\",\r\n                padding: \"10px\",\r\n                display: \"flex\"\r\n              }}\r\n            >\r\n              <h2 style={{ color: \"#F99116\" }}>Restaurants</h2>\r\n              <InputGroup\r\n                style={{ marginLeft: \"10px\", marginRight: \"20px\" }}\r\n                size=\"lg\"\r\n                className=\"mb-3\"\r\n              >\r\n                <FormControl\r\n                  placeholder=\"Search Restaurant\"\r\n                  aria-label=\"With textarea\"\r\n                  value={this.state.searchItem}\r\n                  onChange={this.handleSearchChange}\r\n                />\r\n                <InputGroup.Append>\r\n                  <Button\r\n                    className=\"btn-lg btn-block btn-dark\"\r\n                    onClick={this.search}\r\n                  >\r\n                    Search\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </div>\r\n          </Affix>\r\n          <div className=\"restaurnat-scroll\">\r\n            <Row noGutters={true}>{restaurants}</Row>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    restaurant: state.dataReducer.restaurants\r\n  };\r\n};\r\n\r\nconst mapDipatchToProps = dispatch => {\r\n  return {\r\n    getRestaurant: () => {\r\n      dispatch(dataActions.getRestaurants());\r\n    },\r\n    getMenu: id => {\r\n      dispatch(dataActions.getRestaurantMenu(id));\r\n    },\r\n    getSearchResult: item => {\r\n      dispatch(dataActions.getSearchedRestaurants(item));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDipatchToProps)(Restaurants);\r\n","import React from \"react\";\r\nimport \"../Styles/header.css\";\r\nimport * as actions from \"../redux_store/actions/authenticate\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Ripple } from \"react-spinners-css\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Label,\r\n  FormFeedback\r\n} from \"reactstrap\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  handleEmailChange = event => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  handlePasswordChange = event => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onAuth(this.state.email, this.state.password);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        {this.props.loading ? (\r\n          <Ripple color=\"FFFFFF\" size={200} />\r\n        ) : (\r\n          <Card>\r\n            <CardBody className=\"card-color\">\r\n              <Form onSubmit={this.handleSubmit}>\r\n                <FormGroup>\r\n                  <Label className=\"font-weight-bold\">Username</Label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    placeholder=\"email\"\r\n                    id=\"input1\"\r\n                    value={this.state.email}\r\n                    name=\"email\"\r\n                    onChange={this.handleEmailChange}\r\n                    invalid={this.props.error}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label className=\"font-weight-bold\">Password</Label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    id=\"input2\"\r\n                    value={this.state.password}\r\n                    name=\"password\"\r\n                    onChange={this.handlePasswordChange}\r\n                    invalid={this.props.error}\r\n                  />\r\n                  <FormFeedback>Wrong Username or Password</FormFeedback>\r\n                </FormGroup>\r\n                <Button className=\"btn-lg btn-block\" id=\"button\" type=\"submit\">\r\n                  LogIn\r\n                </Button>\r\n                <h6 className=\"text-center\">Not a member?</h6>\r\n                <NavLink to=\"/signup\" style={{ textDecoration: \"none\" }}>\r\n                  <Button\r\n                    className=\"btn-lg btn-block btn-dark\"\r\n                    id=\"inactive-button\"\r\n                  >\r\n                    Signup\r\n                  </Button>\r\n                </NavLink>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.authenticate.token !== null,\r\n    error: state.authenticate.error,\r\n    loading: state.authenticate.loading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password) => {\r\n      dispatch(actions.authLogin(email, password));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React from \"react\";\r\nimport \"../Styles/header.css\";\r\nimport { Navbar, NavbarBrand, Image } from \"react-bootstrap\";\r\nimport Login from \"../components/Login\";\r\n\r\nclass LoginForm extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Navbar id=\"navtheme\" fixed=\"top\">\r\n          <NavbarBrand>\r\n            <Image\r\n              src={require(\"../Images/logo.png\")}\r\n              height=\"39px\"\r\n              width=\"150px\"\r\n              style={{ paddingLeft: \"15px\" }}\r\n            />\r\n          </NavbarBrand>\r\n        </Navbar>\r\n        <div className=\"overlay\"></div>\r\n        <div id=\"form-container\">\r\n          <Login />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport \"../Styles/header.css\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../redux_store/actions/authenticate\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport PasswordValidator from \"password-validator\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  FormFeedback\r\n} from \"reactstrap\";\r\n\r\nclass Signup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      redirect: false,\r\n      nameError: false,\r\n      mailError: false,\r\n      passwordError: false,\r\n      confirmPasswordError: false,\r\n      consirmDisabled: true,\r\n      buttonDisable: true,\r\n      passwordOk: false\r\n    };\r\n    this.handleSignUp = this.handleSignUp.bind(this);\r\n    this.handleRedirect = this.handleRedirect.bind(this);\r\n    this.schema = new PasswordValidator();\r\n    this.schema\r\n      .is()\r\n      .min(6)\r\n      .is()\r\n      .max(32)\r\n      .has()\r\n      .digits()\r\n      .has()\r\n      .not()\r\n      .spaces()\r\n      .is()\r\n      .not()\r\n      .oneOf([\"password\", \"Password\"]);\r\n  }\r\n\r\n  submitButtonDisable(\r\n    nameError,\r\n    mailError,\r\n    passwordError,\r\n    confirmPasswordError\r\n  ) {\r\n    if (nameError || mailError || passwordError || confirmPasswordError) {\r\n      this.setState({ buttonDisable: true });\r\n    } else if (\r\n      this.state.name === \"\" ||\r\n      this.state.email === \"\" ||\r\n      this.state.password === \"\" ||\r\n      this.state.confirmPassword === \"\"\r\n    ) {\r\n      this.setState({ buttonDisable: true });\r\n    } else {\r\n      this.setState({ buttonDisable: false });\r\n    }\r\n  }\r\n\r\n  handleChangeName = event => {\r\n    event.preventDefault();\r\n    this.setState({ name: event.target.value });\r\n    if (\r\n      !isNaN(event.target.value) ||\r\n      !isNaN(event.target.value.charAt(0)) ||\r\n      event.target.value.length < 3\r\n    ) {\r\n      this.setState({ nameError: true, buttonDisable: true });\r\n    } else if (!event.target.value) {\r\n      this.setState({ nameError: true, buttonDisable: true });\r\n    } else {\r\n      this.setState({ nameError: false });\r\n    }\r\n    console.log(\"naerr \" + this.state.nameError);\r\n    this.submitButtonDisable(\r\n      this.state.nameError,\r\n      this.state.mailError,\r\n      this.state.passwordError,\r\n      this.state.confirmPasswordError\r\n    );\r\n  };\r\n\r\n  handleChangeEmail = event => {\r\n    this.setState({ email: event.target.value });\r\n    const isValidMail = EmailValidator.validate(event.target.value);\r\n    if (!isValidMail) {\r\n      this.setState({ mailError: true, buttonDisable: true });\r\n    } else {\r\n      this.setState({ mailError: false });\r\n    }\r\n    this.submitButtonDisable();\r\n  };\r\n  handleChangePassword = event => {\r\n    this.setState({ password: event.target.value });\r\n    const isValidPassword = this.schema.validate(event.target.value);\r\n    if (!isValidPassword) {\r\n      this.setState({\r\n        passwordError: true,\r\n        consirmDisabled: true,\r\n        confirmPassword: \"\",\r\n        buttonDisable: true\r\n      });\r\n    } else {\r\n      this.setState({ passwordError: false, consirmDisabled: false });\r\n    }\r\n    this.submitButtonDisable();\r\n  };\r\n  handleChangeConfirmPassword = event => {\r\n    this.setState({ confirmPassword: event.target.value });\r\n    if (this.state.password !== event.target.value) {\r\n      this.setState({\r\n        confirmPasswordError: true,\r\n        passwordOk: false,\r\n        buttonDisable: true\r\n      });\r\n    } else {\r\n      this.setState({ confirmPasswordError: false, passwordOk: true });\r\n    }\r\n    this.submitButtonDisable();\r\n    console.log(this.state.buttonDisable);\r\n  };\r\n\r\n  handleSignUp = event => {\r\n    event.preventDefault();\r\n    if (this.state.password === this.state.confirmPassword) {\r\n      this.props.onSignUp(\r\n        this.state.name,\r\n        this.state.email,\r\n        this.state.password\r\n      );\r\n      this.handleRedirect();\r\n    } else {\r\n      this.setState({ confirmPasswordError: true });\r\n    }\r\n  };\r\n\r\n  handleRedirect() {\r\n    if (\r\n      this.props.err === null ||\r\n      this.props.err === undefined ||\r\n      this.props.loading === false\r\n    ) {\r\n      this.setState({ redirect: true });\r\n    }\r\n  }\r\n\r\n  redirectTo() {\r\n    return <Redirect to=\"/profileinfo\" />;\r\n  }\r\n\r\n  render() {\r\n    console.log(\"erros \" + this.state.redirect);\r\n    return (\r\n      <div>\r\n        {this.state.redirect ? this.redirectTo() : null}\r\n        <Card>\r\n          <CardBody className=\"card-color\">\r\n            <Form onSubmit={this.handleSignUp}>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup required>\r\n                    <Label className=\"font-weight-bold\">Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Full name\"\r\n                      name=\"name\"\r\n                      value={this.state.name}\r\n                      onChange={this.handleChangeName}\r\n                      invalid={this.state.nameError}\r\n                    />\r\n                    <FormFeedback>Invalid Name</FormFeedback>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup required>\r\n                    <Label className=\"font-weight-bold\">Email</Label>\r\n                    <Input\r\n                      type=\"email\"\r\n                      placeholder=\"email\"\r\n                      name=\"email\"\r\n                      value={this.state.email}\r\n                      onChange={this.handleChangeEmail}\r\n                      invalid={this.state.mailError}\r\n                    />\r\n                    <FormFeedback>Invalid Email</FormFeedback>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row></Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup required>\r\n                    <Label className=\"font-weight-bold\">Password</Label>\r\n                    <Input\r\n                      type=\"password\"\r\n                      placeholder=\"password\"\r\n                      name=\"password\"\r\n                      value={this.state.password}\r\n                      onChange={this.handleChangePassword}\r\n                      invalid={this.state.passwordError}\r\n                      valid={this.state.passwordOk}\r\n                    />\r\n                    <FormFeedback>\r\n                      Minimum password length is 6, Password must contains both\r\n                      number and digits\r\n                    </FormFeedback>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup required>\r\n                    <Label className=\"font-weight-bold\">Confirm Password</Label>\r\n                    <Input\r\n                      type=\"password\"\r\n                      placeholder=\"confirm password\"\r\n                      name=\"confirm password\"\r\n                      value={this.state.confirmPassword}\r\n                      onChange={this.handleChangeConfirmPassword}\r\n                      disabled={this.state.consirmDisabled}\r\n                      invalid={this.state.confirmPasswordError}\r\n                      valid={this.state.passwordOk}\r\n                    />\r\n                    <FormFeedback>Type similar password as before</FormFeedback>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Button\r\n                className=\"btn-lg btn-block\"\r\n                id=\"button\"\r\n                type=\"submit\"\r\n                disabled={this.state.buttonDisable}\r\n              >\r\n                Next\r\n              </Button>\r\n              <h6 className=\"text-center\">Already have a account?</h6>\r\n              <NavLink to=\"/\" style={{ textDecoration: \"none\" }}>\r\n                <Button\r\n                  className=\"btn-lg btn-block btn-dark\"\r\n                  id=\"inactive-button\"\r\n                >\r\n                  Login\r\n                </Button>\r\n              </NavLink>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    err: state.authenticate.error,\r\n    loading: state.authenticate.loading,\r\n    token: state.authenticate.token\r\n  };\r\n};\r\n\r\nconst mapDipatchToProps = dispatch => {\r\n  return {\r\n    onSignUp: (name, email, password) => {\r\n      dispatch(actions.authSignUp(name, email, password));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDipatchToProps)(Signup);\r\n","import React from \"react\";\r\nimport \"../Styles/header.css\";\r\nimport { Navbar, NavbarBrand, Image } from \"react-bootstrap\";\r\nimport Signup from \"../components/Signup\";\r\n\r\nclass SignupLayout extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Navbar id=\"navtheme\" fixed=\"top\">\r\n          <NavbarBrand>\r\n            <Image\r\n              src={require(\"../Images/logo.png\")}\r\n              height=\"39px\"\r\n              width=\"150px\"\r\n              style={{ paddingLeft: \"15px\" }}\r\n            />\r\n          </NavbarBrand>\r\n        </Navbar>\r\n        <div className=\"overlay\"></div>\r\n        <div id=\"form-container\">\r\n          <Signup />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignupLayout;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Container, Image, Card, Badge, Button } from \"react-bootstrap\";\r\nimport { UncontrolledTooltip } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { DualRing, Ellipsis } from \"react-spinners-css\";\r\nimport * as actions from \"../redux_store/actions/dataAction\";\r\nimport \"../Styles/header.css\";\r\n\r\nclass ProfileCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true\r\n    };\r\n  }\r\n  render() {\r\n    const token = localStorage.getItem(\"token\");\r\n    console.log(token);\r\n    return (\r\n      <div>\r\n        <Card\r\n          className=\"profile-dashboard \"\r\n          style={{\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            boxShadow: \"1px 1px 5px #242424\"\r\n          }}\r\n        >\r\n          {this.props.imageLoading ? (\r\n            <DualRing color=\"#F99116\" size={120} />\r\n          ) : (\r\n            <div>\r\n              <NavLink to=\"/updateimage\" id=\"tooltip\">\r\n                <Image\r\n                  src={this.props.image.image}\r\n                  height=\"150px\"\r\n                  width=\"150px\"\r\n                  roundedCircle\r\n                />\r\n              </NavLink>\r\n              <UncontrolledTooltip placement=\"right\" target=\"tooltip\">\r\n                Update Profile Photo\r\n              </UncontrolledTooltip>\r\n            </div>\r\n          )}\r\n\r\n          <Card.Body style={{ justifyContent: \"center\", display: \"flex\" }}>\r\n            {this.props.dataLoading ? (\r\n              <Ellipsis color=\"#F99116\" size={25} />\r\n            ) : (\r\n              <div>\r\n                <Card.Title>\r\n                  <h3 style={{ textAlign: \"center\" }}>\r\n                    {this.props.users.name}\r\n                  </h3>\r\n                  <h5 style={{ textAlign: \"center\" }}>Love to eat</h5>\r\n                </Card.Title>\r\n                <Card.Text>\r\n                  <span>\r\n                    <span style={{ fontWeight: \"bold\" }}>Email: </span>\r\n                    {this.props.users.email}\r\n                  </span>\r\n                  <br />\r\n                  <br />\r\n                  <Container style={{ padding: \"0\", margin: \"0\" }}>\r\n                    <span style={{ fontWeight: \"bold\" }}>Favourite Food:</span>\r\n                  </Container>\r\n                  <Container style={{ padding: \"0\", margin: \"0\" }}>\r\n                    <Badge pill variant=\"info\">\r\n                      {this.props.users.what_you_crave_for}\r\n                    </Badge>\r\n                  </Container>\r\n                </Card.Text>\r\n              </div>\r\n            )}\r\n          </Card.Body>\r\n        </Card>\r\n        <NavLink to=\"/editprofile\">\r\n          <Button\r\n            style={{\r\n              marginTop: \"10px\",\r\n              borderRadius: \"25px\",\r\n              background: \"#242424\",\r\n              border: \"0px\",\r\n              boxShadow: \"1px 1px 5px #242424\"\r\n            }}\r\n          >\r\n            Edit profile\r\n          </Button>\r\n        </NavLink>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.dataReducer.data,\r\n    image: state.dataReducer.image,\r\n    imageLoading: state.dataReducer.imageLoading,\r\n    dataLoading: state.dataReducer.dataLoading\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ProfileCard);\r\n","import axios from \"axios\";\r\nimport * as actionType from \"./actionType\";\r\n\r\nexport const setFilterStart = data => {\r\n  return {\r\n    type: actionType.SET_FILTER_START\r\n  };\r\n};\r\n\r\nexport const setFilterSuccess = data => {\r\n  return {\r\n    type: actionType.SET_FILTER_SUCCESS,\r\n    filterInfo: { data }\r\n  };\r\n};\r\n\r\nexport const getFilterSuccess = data => {\r\n  return {\r\n    type: actionType.GET_FILTER_SUCCESS,\r\n    suggestion: { data }\r\n  };\r\n};\r\n\r\nexport const getFilterSettingStart = () => {\r\n  return {\r\n    type: actionType.GET_FILTER_SETTING_START\r\n  };\r\n};\r\n\r\nexport const getFilterSetting = data => {\r\n  return {\r\n    type: actionType.GET_FILTER_SETTING,\r\n    filterInfo: { data }\r\n  };\r\n};\r\n\r\nexport const filterStart = () => {\r\n  return {\r\n    type: actionType.GET_FILTER_START\r\n  };\r\n};\r\n\r\nexport const filterFail = error => {\r\n  return {\r\n    type: actionType.GET_FILTER_FAIL,\r\n    dataError: error\r\n  };\r\n};\r\n\r\nexport const initFilter = (gender, min_age, max_age) => {\r\n  return dispatch => {\r\n    dispatch(filterStart());\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/api/profilesettings/\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        const userID = response.data[0].user_profile;\r\n        const settingID = response.data[0].id;\r\n        submitFilter(userID, settingID, gender, min_age, max_age, dispatch);\r\n      });\r\n  };\r\n};\r\n\r\nconst submitFilter = (\r\n  userID,\r\n  settingID,\r\n  gender,\r\n  min_age,\r\n  max_age,\r\n  dispatch\r\n) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  axios\r\n    .put(\r\n      `http://127.0.0.1:8000/api/profilesettings/${settingID}/`,\r\n      {\r\n        user_profile: userID,\r\n        foodie_partner: gender,\r\n        min_age: min_age,\r\n        max_age: max_age\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }\r\n    )\r\n    .then(response => {\r\n      console.log(response.data);\r\n      dispatch(setFilterSuccess(response.data));\r\n    });\r\n};\r\n\r\nexport const getFriendSuggestion = () => {\r\n  return dispatch => {\r\n    dispatch(filterStart());\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/api/explorerestaurantscard/\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        dispatch(getFilterSuccess(response.data));\r\n      })\r\n      .catch(err => {\r\n        dispatch(filterFail());\r\n      });\r\n  };\r\n};\r\n\r\nexport const getRestaurantsSetting = () => {\r\n  return dispatch => {\r\n    dispatch(getFilterSettingStart());\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/api/explorerestaurants/\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        console.log(response.data);\r\n        dispatch(getFilterSetting(response.data[0]));\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateRestaurantChoice = (\r\n  userId,\r\n  id,\r\n  resName,\r\n  menu_choice,\r\n  eating_time,\r\n  filterId\r\n) => {\r\n  return dispatch => {\r\n    dispatch(setFilterStart());\r\n    const token = localStorage.getItem(\"token\");\r\n    console.log(\"accesing the function\");\r\n    console.log(\"filter: \" + filterId);\r\n    const formData = new FormData();\r\n    formData.append(\"user_profile\", userId);\r\n    formData.append(\"user_about\", id);\r\n    formData.append(\"restaurant_name\", resName);\r\n    formData.append(\"menu_choice\", menu_choice);\r\n    formData.append(\"eating_time\", eating_time);\r\n    axios\r\n      .put(\r\n        `http://127.0.0.1:8000/api/explorerestaurants/${filterId}/`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            authorization: `Bearer ${token}`\r\n          }\r\n        }\r\n      )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        dispatch(setFilterSuccess(response.data));\r\n      });\r\n  };\r\n};\r\n","import axios from \"axios\";\r\nimport * as actionType from \"./actionType\";\r\n\r\nexport const getListStart = () => {\r\n  return {\r\n    type: actionType.GET_LIST\r\n  };\r\n};\r\n\r\nexport const requestStart = () => {\r\n  return {\r\n    type: actionType.REQUEST_START\r\n  };\r\n};\r\n\r\nexport const requestSuccess = () => {\r\n  return {\r\n    type: actionType.REQUEST_SUCCESS\r\n  };\r\n};\r\n\r\nexport const requestFail = error => {\r\n  return {\r\n    type: actionType.REQUEST_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const getListSuccess = data => {\r\n  return {\r\n    type: actionType.GET_LIST_SUCCESS,\r\n    friendList: data\r\n  };\r\n};\r\n\r\nexport const getListFail = error => {\r\n  return {\r\n    type: actionType.GET_LIST_FAIL,\r\n    dataError: error\r\n  };\r\n};\r\n\r\nexport const getRequestListSuccess = data => {\r\n  return {\r\n    type: actionType.GET_REQUEST_LIST_SUCCESS,\r\n    requestList: data\r\n  };\r\n};\r\n\r\nexport const getFriendRequests = () => {\r\n  return dispatch => {\r\n    dispatch(getListStart());\r\n    const token = localStorage.getItem(\"token\");\r\n    console.log(\"accesing friend reqest\");\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/api/friends/requests/\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        console.log(response.data);\r\n        dispatch(getRequestListSuccess(response.data));\r\n      })\r\n      .catch(err => {\r\n        dispatch(getListFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const acceptRequest = requestID => {\r\n  return dispatch => {\r\n    dispatch(requestStart());\r\n    const token = localStorage.getItem(\"token\");\r\n    console.log(token);\r\n    axios\r\n      .post(\r\n        `http://127.0.0.1:8000/api/friendrequests/${requestID}/accept/`,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        }\r\n      )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        dispatch(requestSuccess());\r\n      })\r\n      .catch(err => {\r\n        dispatch(requestFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const rejectRequest = requestID => {\r\n  return dispatch => {\r\n    dispatch(requestStart());\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .post(\r\n        `http://127.0.0.1:8000/api/friendrequests/${requestID}/reject/`,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        }\r\n      )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        dispatch(requestSuccess());\r\n      })\r\n      .catch(err => {\r\n        dispatch(requestFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const sendRequest = requestID => {\r\n  return dispatch => {\r\n    dispatch(requestStart());\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .post(\r\n        \"http://127.0.0.1:8000/api/friends/\",\r\n        {\r\n          email: requestID\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        }\r\n      )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        dispatch(requestSuccess());\r\n      })\r\n      .catch(err => {\r\n        dispatch(requestFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const getFriendList = () => {\r\n  return dispatch => {\r\n    dispatch(getListStart());\r\n    const token = localStorage.getItem(\"token\");\r\n    console.log(\"accesing friend list\");\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/api/friends/\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        console.log(response.data);\r\n        dispatch(getListSuccess(response.data));\r\n      })\r\n      .catch(err => {\r\n        dispatch(getListFail(err));\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Container, Row, Col, Card, Image, Button } from \"react-bootstrap\";\r\nimport {\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\nimport NavBar from \"./Navbar\";\r\nimport ProfileCard from \"./Profilecard\";\r\nimport { connect } from \"react-redux\";\r\nimport { Affix } from \"antd\";\r\nimport { Ellipsis } from \"react-spinners-css\";\r\n\r\nimport * as filterActions from \"../redux_store/actions/filterAction\";\r\nimport * as requestAction from \"../redux_store/actions/friendRequest\";\r\nimport * as actions from \"../redux_store/actions/dataAction\";\r\nimport \"../Styles/header.css\";\r\n\r\nclass Profile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dropDownOpen: false,\r\n      menuOpen: false,\r\n      timeOpen: false,\r\n      selectedMenu: \"Select Item\",\r\n      menuList: [],\r\n      settingUpdate: false,\r\n      suggestionUpdate: false,\r\n      foodMenuUpdate: false,\r\n      reload: false,\r\n      suggestionListData: [],\r\n      selectedRestaurant: \"Restaurant\",\r\n      restaurantList: [],\r\n      foodMenu: [],\r\n      selectedTime: \"Select Eating Time\"\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    this.select = this.select.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.getMyProfile();\r\n    this.props.getProfileImage();\r\n    this.props.getUserSuggestions();\r\n    this.props.getFilterInfo();\r\n    this.props.getRestaurants();\r\n  }\r\n\r\n  getGender = gender => {\r\n    if (gender === \"M\") {\r\n      return \"Male\";\r\n    } else if (gender === \"F\") {\r\n      return \"Female\";\r\n    }\r\n  };\r\n\r\n  handleChangeTime = event => {\r\n    this.setState({ time: event.target.value });\r\n  };\r\n\r\n  sendRequest = (requestID, index) => {\r\n    this.props.sendFriendRequest(requestID);\r\n    console.log(index);\r\n    const array = this.state.suggestionListData;\r\n    delete array[index];\r\n    console.log(array);\r\n    this.setState({ suggestionListData: array });\r\n  };\r\n\r\n  createRestaurantList() {\r\n    this.setState({\r\n      restaurantList: this.props.restaurants.map(data => (\r\n        <DropdownItem\r\n          key={data.id}\r\n          onClick={(event, id) => this.select(event, data.id)}\r\n        >\r\n          {data.name}\r\n        </DropdownItem>\r\n      ))\r\n    });\r\n  }\r\n\r\n  createRestaurantMenu = () => {\r\n    this.setState({\r\n      menuList: this.props.foodItemName.map(data => (\r\n        <DropdownItem key={data.id} onClick={event => this.selectMenu(event)}>\r\n          {data.item_name}\r\n        </DropdownItem>\r\n      ))\r\n    });\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({ dropDownOpen: !this.state.dropDownOpen });\r\n  };\r\n\r\n  select = (event, id) => {\r\n    this.setState({\r\n      dropDownOpen: !this.state.dropDownOpen,\r\n      selectedRestaurant: event.target.innerText,\r\n      foodMenuUpdate: true,\r\n      selectedMenu: \"Select Item\"\r\n    });\r\n    this.props.getMenu(id);\r\n  };\r\n\r\n  toggleMenu = () => {\r\n    this.setState({ menuOpen: !this.state.menuOpen });\r\n  };\r\n\r\n  selectMenu = event => {\r\n    this.setState({\r\n      menuOpen: !this.state.menuOpen,\r\n      selectedMenu: event.target.innerText\r\n    });\r\n  };\r\n\r\n  toggleTime = () => {\r\n    this.setState({ timeOpen: !this.state.timeOpen });\r\n  };\r\n\r\n  selectTime = event => {\r\n    this.setState({\r\n      timeOpen: !this.state.timeOpen,\r\n      selectedTime: event.target.innerText\r\n    });\r\n  };\r\n\r\n  createSuggestionList() {\r\n    const host = \"http://127.0.0.1:8000\";\r\n\r\n    this.setState({\r\n      suggestionListData: this.props.userSuggestion.map((data, index) => (\r\n        <list key={data.id}>\r\n          <Card style={{ margin: \"15px\" }}>\r\n            <Card.Header\r\n              id=\"suggested-profile-header\"\r\n              style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n            >\r\n              <div style={{ display: \"flex\" }}>\r\n                <Image\r\n                  src={host + data.image}\r\n                  height=\"60px\"\r\n                  width=\"60px\"\r\n                  roundedCircle\r\n                />\r\n                <Card.Title style={{ color: \"#FFFFFF\", paddingLeft: \"10px\" }}>\r\n                  <div>\r\n                    <h3 style={{ color: \"#F99116\" }}>{data.name}</h3>\r\n                    <p style={{ fontStyle: \"italic\" }}>Age: {data.user_age}</p>\r\n                    <p style={{ fontStyle: \"italic\" }}>\r\n                      Restaurant: {data.restaurant_name}\r\n                    </p>\r\n                    <p style={{ fontStyle: \"italic\" }}>\r\n                      Want to eat: {data.menu_choice}\r\n                    </p>\r\n                  </div>\r\n                </Card.Title>\r\n              </div>\r\n              <Button\r\n                id=\"normal_button\"\r\n                name=\"send-button\"\r\n                onClick={this.sendRequest.bind(this, data.email, index)}\r\n              >\r\n                Send Request\r\n              </Button>\r\n            </Card.Header>\r\n          </Card>\r\n        </list>\r\n      ))\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.filterSettingLoading !== true) {\r\n      if (this.state.settingUpdate !== true) {\r\n        this.createRestaurantList();\r\n        this.setState({\r\n          settingUpdate: true,\r\n          selectedRestaurant: this.props.filterSettings.restaurant_name,\r\n          selectedMenu: this.props.filterSettings.menu_choice,\r\n          selectedTime: this.props.filterSettings.eating_time\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.props.suggestionLoading !== true) {\r\n      if (this.state.suggestionUpdate !== true) {\r\n        this.createSuggestionList();\r\n        this.setState({ suggestionUpdate: true });\r\n      }\r\n    }\r\n\r\n    if (this.props.menuLoading !== true) {\r\n      if (this.state.foodMenuUpdate !== false) {\r\n        this.createRestaurantMenu();\r\n        this.setState({ foodMenuUpdate: false });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSettingSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.updateFilterData(\r\n      this.props.myProfile.user_id,\r\n      this.props.myProfile.id,\r\n      this.state.selectedRestaurant,\r\n      this.state.selectedMenu,\r\n      this.state.selectedTime,\r\n      this.props.filterSettings.id\r\n    );\r\n    this.setState({ reload: true });\r\n  };\r\n\r\n  handleRedirect() {\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Affix offsetTop={0}>\r\n          <NavBar />\r\n        </Affix>\r\n        <div style={{ margin: \"5px\" }}>\r\n          <Row>\r\n            <Col xs={3}>\r\n              <Affix offsetTop={90}>\r\n                <ProfileCard />\r\n              </Affix>\r\n            </Col>\r\n            <Col xs={6} id=\"profile-history\">\r\n              <h2 style={{ textAlign: \"left\", marginTop: \"15px\" }}>\r\n                Suggested friends\r\n              </h2>\r\n              <div className=\"divider\"></div>\r\n              <Container className=\"inner-scroll\">\r\n                {this.state.suggestionListData}\r\n              </Container>\r\n            </Col>\r\n            <Col id=\"profile-history\" xs={3}>\r\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                {this.props.filterLoading ? (\r\n                  <Ellipsis color=\"#F99116\" size={25} />\r\n                ) : (\r\n                  <Card\r\n                    className=\"profile-dashboard \"\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignContent: \"center\",\r\n                      boxShadow: \"1px 1px 5px #242424\"\r\n                    }}\r\n                  >\r\n                    <Card.Body\r\n                      style={{ justifyContent: \"center\", padding: \"0px\" }}\r\n                    >\r\n                      <Card.Header as=\"h4\" style={{ margin: \"0px\" }}>\r\n                        Filter Suggestion\r\n                      </Card.Header>\r\n                      <Container\r\n                        style={{\r\n                          padding: \"15px\",\r\n                          alignContent: \"center\",\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\"\r\n                        }}\r\n                      >\r\n                        <Row>\r\n                          <Col\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"center\",\r\n                              margin: \"5px\"\r\n                            }}\r\n                          >\r\n                            <Dropdown\r\n                              isOpen={this.state.dropDownOpen}\r\n                              toggle={this.toggle}\r\n                            >\r\n                              <DropdownToggle caret>\r\n                                {this.state.selectedRestaurant}\r\n                              </DropdownToggle>\r\n                              <DropdownMenu>\r\n                                {this.state.restaurantList}\r\n                              </DropdownMenu>\r\n                            </Dropdown>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                          <Col\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"center\",\r\n                              margin: \"5px\"\r\n                            }}\r\n                          >\r\n                            <Dropdown\r\n                              isOpen={this.state.menuOpen}\r\n                              toggle={this.toggleMenu}\r\n                            >\r\n                              <DropdownToggle caret>\r\n                                {this.state.selectedMenu}\r\n                              </DropdownToggle>\r\n                              <DropdownMenu>{this.state.menuList}</DropdownMenu>\r\n                            </Dropdown>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                          <Col\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"center\",\r\n                              margin: \"5px\"\r\n                            }}\r\n                          >\r\n                            <Dropdown\r\n                              isOpen={this.state.timeOpen}\r\n                              toggle={this.toggleTime}\r\n                            >\r\n                              <DropdownToggle caret>\r\n                                {this.state.selectedTime}\r\n                              </DropdownToggle>\r\n                              <DropdownMenu>\r\n                                <DropdownItem onClick={this.selectTime}>\r\n                                  Breakfast\r\n                                </DropdownItem>\r\n                                <DropdownItem onClick={this.selectTime}>\r\n                                  Lunch\r\n                                </DropdownItem>\r\n                                <DropdownItem onClick={this.selectTime}>\r\n                                  Dinner\r\n                                </DropdownItem>\r\n                                <DropdownItem onClick={this.selectTime}>\r\n                                  Snack\r\n                                </DropdownItem>\r\n                              </DropdownMenu>\r\n                            </Dropdown>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <Button\r\n                          className=\"btn-lg btn-block\"\r\n                          id=\"button\"\r\n                          style={{ margin: \"10px\" }}\r\n                          onClick={this.handleSettingSubmit}\r\n                        >\r\n                          Filter\r\n                        </Button>\r\n                      </Container>\r\n                    </Card.Body>\r\n                    {this.state.reload ? (\r\n                      this.props.updateFilterLoading ? (\r\n                        <Ellipsis\r\n                          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                          color=\"#F99116\"\r\n                          size={35}\r\n                        />\r\n                      ) : (\r\n                        this.handleRedirect()\r\n                      )\r\n                    ) : null}\r\n                  </Card>\r\n                )}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    myProfile: state.dataReducer.data,\r\n    profileLoading: state.dataReducer.profileLoading,\r\n    userSuggestion: state.filterReducer.suggestion,\r\n    suggestionLoading: state.filterReducer.filterLoading,\r\n    filterSettings: state.filterReducer.filterInfo,\r\n    restaurants: state.dataReducer.restaurants,\r\n    filterSettingLoading: state.filterReducer.filterDataLoading,\r\n    foodItemName: state.dataReducer.restMenu,\r\n    menuLoading: state.dataReducer.restaurantMenuLoading,\r\n    updateFilterLoading: state.filterReducer.filterUpdateLoading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getMyProfile: () => {\r\n      dispatch(actions.getUser());\r\n    },\r\n    getProfileImage: () => {\r\n      dispatch(actions.getImage());\r\n    },\r\n    getUserSuggestions: () => {\r\n      dispatch(filterActions.getFriendSuggestion());\r\n    },\r\n    getFilterInfo: () => {\r\n      dispatch(filterActions.getRestaurantsSetting());\r\n    },\r\n    getRestaurants: () => {\r\n      dispatch(actions.getRestaurants());\r\n    },\r\n    sendFriendRequest: Id => {\r\n      dispatch(requestAction.sendRequest(Id));\r\n    },\r\n    getMenu: restaurantId => {\r\n      dispatch(actions.getRestaurantMenu(restaurantId));\r\n    },\r\n    updateFilterData: (\r\n      userId,\r\n      aboutId,\r\n      restaurantName,\r\n      menuChoice,\r\n      eatingTime,\r\n      filterId\r\n    ) => {\r\n      dispatch(\r\n        filterActions.updateRestaurantChoice(\r\n          userId,\r\n          aboutId,\r\n          restaurantName,\r\n          menuChoice,\r\n          eatingTime,\r\n          filterId\r\n        )\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Ripple } from \"react-spinners-css\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport * as actions from \"../redux_store/actions/dataAction\";\r\n\r\nimport \"../Styles/header.css\";\r\nimport { Navbar, NavbarBrand, Image, Container } from \"react-bootstrap\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  CardHeader,\r\n  FormFeedback\r\n} from \"reactstrap\";\r\n\r\nclass Info extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.select = this.select.bind(this);\r\n    this.handleRedirect = this.handleRedirect.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.state = {\r\n      dropDownOpen: false,\r\n      gender: \"Male\",\r\n      phoneNumber: \"\",\r\n      phoneNumberValid: false,\r\n      foodChoice: \"\",\r\n      foodChoiceError: false,\r\n      redirect: false,\r\n      loading: false,\r\n      birthDate: \"\",\r\n      birthDateError: false,\r\n      buttonDisabled: true\r\n    };\r\n  }\r\n\r\n  formValidation(phone, birthDate, foodChoice) {\r\n    if (phone || birthDate || foodChoice) {\r\n      console.log(\"phone \" + phone);\r\n      console.log(\"birthDate \" + birthDate);\r\n      console.log(\"foodChoice \" + foodChoice);\r\n      return true;\r\n    } else if (\r\n      this.state.phoneNumber === \"\" ||\r\n      this.state.foodChoice === \"\" ||\r\n      this.state.birthDate === \"\"\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  birthDateValidation(selectedDate) {\r\n    let date = new Date();\r\n    date = this.formatDate(date);\r\n    const currentYear = moment(date).format(\"YYYY\");\r\n    const year = moment(selectedDate).format(\"YYYY\");\r\n    console.log(year);\r\n    if (currentYear - year <= 17) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  phoneNumberValidity(phoneNum) {\r\n    console.log(phoneNum.length);\r\n    if (phoneNum.length > 14 || phoneNum.length < 14) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleChangePhoneNumber = event => {\r\n    console.log(event);\r\n    console.log(this.phoneNumberValidity(event));\r\n    this.setState({\r\n      phoneNumber: event,\r\n      phoneNumberValid: this.phoneNumberValidity(event),\r\n      buttonDisabled: this.formValidation(\r\n        this.phoneNumberValidity(event),\r\n        this.state.birthDateError,\r\n        this.state.foodChoiceError\r\n      )\r\n    });\r\n  };\r\n\r\n  handleChangeBirthDate = event => {\r\n    const formdate = event.target.value;\r\n    this.setState({\r\n      birthDate: formdate,\r\n      birthDateError: this.birthDateValidation(formdate),\r\n      buttonDisabled: this.formValidation(\r\n        this.state.phoneNumberValid,\r\n        this.birthDateValidation(formdate),\r\n        this.state.foodChoiceError\r\n      )\r\n    });\r\n  };\r\n\r\n  foodChoiceValidity(data) {\r\n    if (data.length <= 2) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleChangeFoodChoice = event => {\r\n    this.setState({\r\n      foodChoice: event.target.value,\r\n      foodChoiceError: this.foodChoiceValidity(event.target.value),\r\n      buttonDisabled: this.formValidation(\r\n        this.state.phoneNumberValid,\r\n        this.state.birthDateError,\r\n        this.foodChoiceValidity(event.target.value)\r\n      )\r\n    });\r\n\r\n    const td = this.formValidation(\r\n      this.state.phoneNumberValid,\r\n      this.state.birthDateError,\r\n      this.foodChoiceValidity(event.target.value)\r\n    );\r\n\r\n    console.log(td);\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({ dropDownOpen: !this.state.dropDownOpen });\r\n  };\r\n\r\n  select = event => {\r\n    this.setState({\r\n      dropDownOpen: !this.state.dropDownOpen,\r\n      gender: event.target.innerText\r\n    });\r\n  };\r\n\r\n  formatDate = date => {\r\n    return moment(date).format(\"YYYY-MM-DD\");\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    let userGender = \"\";\r\n    if (this.state.gender === \"Male\") {\r\n      userGender = \"M\";\r\n    } else if (this.state.gender === \"Female\") {\r\n      userGender = \"F\";\r\n    }\r\n    console.log(this.state.birthDate);\r\n    this.props.onComplete(\r\n      this.state.phoneNumber,\r\n      this.state.birthDate,\r\n      userGender,\r\n      this.state.foodChoice\r\n    );\r\n    this.setState({ loading: this.props.completionLoading });\r\n    this.handleRedirect();\r\n  };\r\n\r\n  handleRedirect() {\r\n    if (this.props.err === null || this.props.err === undefined) {\r\n      this.setState({ redirect: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Navbar id=\"navtheme\" fixed=\"top\">\r\n          <NavbarBrand>\r\n            <Image\r\n              src={require(\"../Images/logo.png\")}\r\n              height=\"39px\"\r\n              width=\"150px\"\r\n              style={{ paddingLeft: \"15px\" }}\r\n            />\r\n          </NavbarBrand>\r\n        </Navbar>\r\n        <div className=\"overlay\"></div>\r\n        <div id=\"form-container\">\r\n          {this.props.completionLoading ? (\r\n            <Ripple color=\"#FFFFFF\" size={200} />\r\n          ) : this.state.redirect ? (\r\n            <Redirect to=\"setrestaurant\" />\r\n          ) : (\r\n            <Card>\r\n              <CardHeader\r\n                className=\"font-weight-bold\"\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-evenly\",\r\n                  padding: \"10px\",\r\n                  fontSize: \"18pt\"\r\n                }}\r\n              >\r\n                Complete Your Profile\r\n              </CardHeader>\r\n              <CardBody className=\"card-color\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n                  <Row form>\r\n                    <Col md={12}>\r\n                      <FormGroup style={{ paddingRight: \"10px\" }}>\r\n                        <Label>Phone number</Label>\r\n                        <PhoneInput\r\n                          country={\"bd\"}\r\n                          placeholder=\"Enter phone number\"\r\n                          onChange={this.handleChangePhoneNumber}\r\n                          value={this.state.phoneNumber}\r\n                          autoFormat={false}\r\n                          enableLongNumbers={false}\r\n                          isValid={() => {\r\n                            return !this.state.phoneNumberValid;\r\n                          }}\r\n                        />\r\n                        <FormFeedback>Erroe</FormFeedback>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <Label for=\"exampleDate\">Birth Date</Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          name=\"date\"\r\n                          id=\"exampleDatetime\"\r\n                          placeholder=\"datetime placeholder\"\r\n                          value={this.state.birthDate}\r\n                          onChange={this.handleChangeBirthDate}\r\n                          invalid={this.state.birthDateError}\r\n                        />\r\n                        <FormFeedback>\r\n                          You must be 18 years old to register\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row form>\r\n                    <Col md={5}>\r\n                      <Label>Gender</Label>\r\n                      <Container>\r\n                        <Dropdown\r\n                          isOpen={this.state.dropDownOpen}\r\n                          toggle={this.toggle}\r\n                        >\r\n                          <DropdownToggle caret>\r\n                            {this.state.gender}\r\n                          </DropdownToggle>\r\n                          <DropdownMenu>\r\n                            <DropdownItem onClick={this.select}>\r\n                              Male\r\n                            </DropdownItem>\r\n                            <DropdownItem onClick={this.select}>\r\n                              Female\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </Dropdown>\r\n                      </Container>\r\n                    </Col>\r\n                    <Col md={7}>\r\n                      <FormGroup>\r\n                        <Label>What you crave for</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          placeholder=\"Enter favourite food\"\r\n                          name=\"foodChoice\"\r\n                          value={this.state.foodChoice}\r\n                          onChange={this.handleChangeFoodChoice}\r\n                          invalid={this.state.foodChoiceError}\r\n                        />\r\n                        <FormFeedback>Enter valid food name</FormFeedback>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Button\r\n                    className=\"btn-lg btn-block\"\r\n                    id=\"button\"\r\n                    type=\"submit\"\r\n                    disabled={this.state.buttonDisabled}\r\n                  >\r\n                    Next\r\n                  </Button>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    err: state.authenticate.err,\r\n    loading: state.authenticate.loading,\r\n    token: state.authenticate.token,\r\n    completionLoading: state.dataReducer.profileLoading\r\n  };\r\n};\r\n\r\nconst mapDipatchToProps = dispatch => {\r\n  return {\r\n    onComplete: (phoneNumber, birthDate, gender, foodChoice, userImage) => {\r\n      dispatch(\r\n        actions.completeProfile(\r\n          phoneNumber,\r\n          birthDate,\r\n          gender,\r\n          foodChoice,\r\n          userImage\r\n        )\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDipatchToProps)(Info);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Ripple } from \"react-spinners-css\";\r\nimport { Affix } from \"antd\";\r\nimport { Navbar, NavbarBrand, Image } from \"react-bootstrap\";\r\nimport ImageUploader from \"react-images-upload\";\r\nimport * as actions from \"../redux_store/actions/dataAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, CardBody, Form, Button, CardHeader } from \"reactstrap\";\r\n\r\nclass SetImage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.state = {\r\n      imageData: [],\r\n      redirect: false,\r\n      buttonName: \"Skip\"\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.getResSetting();\r\n  }\r\n\r\n  setButtonName(data) {\r\n    if (data[0] == null || data[0] === \"\" || data[0] === undefined) {\r\n      return \"Skip\";\r\n    } else {\r\n      return \"Upload\";\r\n    }\r\n  }\r\n\r\n  handleChangeImage = event => {\r\n    this.setState({\r\n      imageData: this.state.imageData.concat(event),\r\n      buttonName: this.setButtonName(event)\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    console.log(this.props.profileData);\r\n    this.props.setImageData(this.state.imageData[0], this.props.restID.id);\r\n    this.props.getProfile();\r\n    this.handleRedirect();\r\n  };\r\n\r\n  handleRedirect() {\r\n    if (\r\n      this.props.err === null ||\r\n      this.props.err === undefined ||\r\n      this.props.loading === false\r\n    ) {\r\n      this.setState({ redirect: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Affix offsetTop={0}>\r\n          <Navbar id=\"navtheme\" fixed=\"top\">\r\n            <NavbarBrand>\r\n              <Image\r\n                src={require(\"../Images/logo.png\")}\r\n                height=\"39px\"\r\n                width=\"150px\"\r\n                style={{ paddingLeft: \"15px\" }}\r\n              />\r\n            </NavbarBrand>\r\n          </Navbar>\r\n        </Affix>\r\n\r\n        <div className=\"overlay\"></div>\r\n\r\n        <div id=\"form-container\">\r\n          {this.props.submitImageLoading ? (\r\n            <Ripple color=\"FFFFFF\" size={200} />\r\n          ) : this.props.profileLoading ? (\r\n            <Ripple color=\"FFFFFF\" size={200} />\r\n          ) : this.state.redirect ? (\r\n            <Redirect to=\"/\" />\r\n          ) : (\r\n            <Card style={{ padding: \"0px\" }}>\r\n              <div>\r\n                <CardHeader\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-evenly\",\r\n                    background: \"#FFFFFF\",\r\n                    color: \"black\",\r\n                    alignContent: \"center\",\r\n                    alignItems: \"center\"\r\n                  }}\r\n                >\r\n                  <h4>Select Profile Picture</h4>\r\n                </CardHeader>\r\n                <CardBody style={{ alignContent: \"center\" }}>\r\n                  <Form onSubmit={event => this.handleSubmit(event)} noValidate>\r\n                    <ImageUploader\r\n                      name=\"image\"\r\n                      withIcon={true}\r\n                      buttonText=\"Choose Image\"\r\n                      onChange={this.handleChangeImage}\r\n                      imgExtension={[\".jpg\", \".png\"]}\r\n                      maxFileSize={5242880}\r\n                      singleImage={true}\r\n                      withLabel={false}\r\n                      withPreview={true}\r\n                      buttonStyles={{ background: \"#242424\" }}\r\n                      fileContainerStyle={{\r\n                        padding: \"0px\"\r\n                      }}\r\n                    />\r\n                    <Button\r\n                      type=\"submit\"\r\n                      id=\"normal_button\"\r\n                      className=\"btn-lg btn-block btn-dark\"\r\n                    >\r\n                      {this.state.buttonName}\r\n                    </Button>\r\n                  </Form>\r\n                </CardBody>\r\n              </div>\r\n            </Card>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.dataReducer.dataLoading,\r\n    profileLoading: state.dataReducer.profileLoading,\r\n    setImageLoading: state.dataReducer.submitImageLoading,\r\n    profileData: state.dataReducer.data,\r\n    restID: state.dataReducer.resSetting\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setImageData: (imageData, restaurantID) => {\r\n      dispatch(actions.setImage(imageData, restaurantID));\r\n    },\r\n    getProfile: () => {\r\n      dispatch(actions.getUser());\r\n    },\r\n    getResSetting: () => {\r\n      dispatch(actions.getRestaurantChoice());\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetImage);\r\n","import React from \"react\";\r\nimport { Affix, Button } from \"antd\";\r\nimport NavBar from \"./Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport * as friendAction from \"../redux_store/actions/friendRequest\";\r\n\r\nimport { Row, Col, Card, Image } from \"react-bootstrap\";\r\n\r\nclass Connections extends React.Component {\r\n  componentWillMount() {\r\n    this.props.getFriendList();\r\n  }\r\n\r\n  render() {\r\n    const host = \"http://127.0.0.1:8000\";\r\n    const friendList = this.props.friendList.map(data => (\r\n      <list key={data.id}>\r\n        <Card\r\n          style={{\r\n            margin: \"5px\",\r\n            paddingLeft: \"10px\",\r\n            paddingRight: \"10px\",\r\n            paddingTop: \"10px\"\r\n          }}\r\n        >\r\n          <Card.Title\r\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n          >\r\n            <Image\r\n              src={host + data.image}\r\n              height=\"60px\"\r\n              width=\"60px\"\r\n              roundedCircle\r\n            />\r\n            <h3 style={{ paddingLeft: \"10px\" }}>{data.name}</h3>\r\n          </Card.Title>\r\n        </Card>\r\n      </list>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <Affix offsetTop={0}>\r\n          <NavBar />\r\n        </Affix>\r\n        <Row>\r\n          <Col xs={3} style={{ margin: \"15px\" }} className=\"inner-scroll\">\r\n            {friendList}\r\n          </Col>\r\n          <Col xs={2}>\r\n            <div className=\"vertical_divider\"></div>\r\n            <div>akjsbdcakjsbckj kjhaxkj h</div>\r\n          </Col>\r\n          <Col xs={5}>\r\n            <Button>My Button</Button>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    friendList: state.friendRequestReducer.friendList\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getFriendList: () => {\r\n      dispatch(friendAction.getFriendList());\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Connections);\r\n","import React from \"react\";\r\nimport { Affix } from \"antd\";\r\nimport NavBar from \"./Navbar\";\r\nimport ProfileCard from \"./Profilecard\";\r\nimport { connect } from \"react-redux\";\r\nimport * as friendRequestAction from \"../redux_store/actions/friendRequest\";\r\n\r\nimport { Row, Col, Card, Image, Button, Container } from \"react-bootstrap\";\r\n\r\nclass FriendRequests extends React.Component {\r\n  componentWillMount() {\r\n    this.props.getRequests();\r\n  }\r\n\r\n  acceptRequest = key => {\r\n    console.log(key);\r\n    this.props.acceptFriendRequest(key);\r\n    window.location.reload();\r\n  };\r\n\r\n  rejectRequest = key => {\r\n    console.log(key);\r\n    this.props.rejectFriendRequest(key);\r\n    window.location.reload();\r\n  };\r\n\r\n  render() {\r\n    const token = localStorage.getItem(\"token\");\r\n    console.log(token);\r\n    const requestList = this.props.requestLists.map(data => (\r\n      <list key={data.id}>\r\n        <Card style={{ margin: \"15px\" }}>\r\n          <Card.Header id=\"suggested-profile-header\">\r\n            <Image\r\n              src={require(\"../Images/photo.jpg\")}\r\n              height=\"60px\"\r\n              width=\"60px\"\r\n              roundedCircle\r\n            />\r\n            <Card.Title style={{ color: \"#FFFFFF\", paddingLeft: \"10px\" }}>\r\n              {data.name}\r\n            </Card.Title>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Card.Body\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-evenly\",\r\n                alignContent: \"center\"\r\n              }}\r\n            >\r\n              <Button\r\n                id=\"normal_button\"\r\n                onClick={() => this.acceptRequest(data.id)}\r\n              >\r\n                Accept\r\n              </Button>\r\n              <Button\r\n                id=\"inner-button\"\r\n                onClick={() => this.rejectRequest(data.id)}\r\n              >\r\n                Reject\r\n              </Button>\r\n            </Card.Body>\r\n          </Card.Body>\r\n        </Card>\r\n      </list>\r\n    ));\r\n    return (\r\n      <div>\r\n        <Affix offsetTop={0}>\r\n          <NavBar />\r\n        </Affix>\r\n        <div style={{ margin: \"5px\" }}>\r\n          <Row>\r\n            <Col xs={3}>\r\n              <Affix offsetTop={90}>\r\n                <ProfileCard />\r\n              </Affix>\r\n            </Col>\r\n            <Col xs={6} id=\"profile-history\">\r\n              <h2 style={{ textAlign: \"left\", marginTop: \"15px\" }}>\r\n                Friend Requests\r\n              </h2>\r\n              <div className=\"divider\"></div>\r\n              <Container className=\"inner-scroll\">{requestList}</Container>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    requestLists: state.friendRequestReducer.requestList\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getRequests: () => dispatch(friendRequestAction.getFriendRequests()),\r\n    acceptFriendRequest: requestID =>\r\n      dispatch(friendRequestAction.acceptRequest(requestID)),\r\n    rejectFriendRequest: requestID =>\r\n      dispatch(friendRequestAction.rejectRequest(requestID))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendRequests);\r\n","import React from \"react\";\r\nimport { Navbar, NavbarBrand, Image } from \"react-bootstrap\";\r\n\r\nclass EmptyNav extends React.Component {\r\n  render() {\r\n    return (\r\n      <Navbar id=\"navtheme\" fixed=\"top\">\r\n        <NavbarBrand>\r\n          <Image\r\n            src={require(\"../Images/logo.png\")}\r\n            height=\"39px\"\r\n            width=\"150px\"\r\n            style={{ paddingLeft: \"15px\" }}\r\n          />\r\n        </NavbarBrand>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmptyNav;\r\n","import React from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Ripple } from \"react-spinners-css\";\r\nimport EmptyNav from \"../components/EmptyNav\";\r\nimport moment from \"moment\";\r\nimport * as dataActions from \"../redux_store/actions/dataAction\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  CardHeader,\r\n  FormFeedback\r\n} from \"reactstrap\";\r\n\r\nclass EditProfile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.select = this.select.bind(this);\r\n    this.handleRedirect = this.handleRedirect.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.state = {\r\n      dropDownOpen: false,\r\n      gender: \"Male\",\r\n      phoneNumber: \"\",\r\n      phoneNumberValid: false,\r\n      foodChoice: \"\",\r\n      foodChoiceError: false,\r\n      redirect: false,\r\n      loading: true,\r\n      birthDate: \"\",\r\n      birthDateError: false,\r\n      buttonDisabled: true\r\n    };\r\n  }\r\n\r\n  formValidation(phone, birthDate, foodChoice) {\r\n    if (phone || birthDate || foodChoice) {\r\n      console.log(\"phone \" + phone);\r\n      console.log(\"birthDate \" + birthDate);\r\n      console.log(\"foodChoice \" + foodChoice);\r\n      return true;\r\n    } else if (\r\n      this.state.phoneNumber === \"\" ||\r\n      this.state.foodChoice === \"\" ||\r\n      this.state.birthDate === \"\"\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  birthDateValidation(selectedDate) {\r\n    let date = new Date();\r\n    date = this.formatDate(date);\r\n    const currentYear = moment(date).format(\"YYYY\");\r\n    const year = moment(selectedDate).format(\"YYYY\");\r\n    console.log(year);\r\n    if (currentYear - year <= 17) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  phoneNumberValidity(phoneNum) {\r\n    console.log(phoneNum.length);\r\n    if (phoneNum.length > 14 || phoneNum.length < 14) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleChangePhoneNumber = event => {\r\n    console.log(event);\r\n    console.log(this.phoneNumberValidity(event));\r\n    this.setState({\r\n      phoneNumber: event,\r\n      phoneNumberValid: this.phoneNumberValidity(event),\r\n      buttonDisabled: this.formValidation(\r\n        this.phoneNumberValidity(event),\r\n        this.state.birthDateError,\r\n        this.state.foodChoiceError\r\n      )\r\n    });\r\n  };\r\n\r\n  handleChangeBirthDate = event => {\r\n    const formdate = event.target.value;\r\n    this.setState({\r\n      birthDate: formdate,\r\n      birthDateError: this.birthDateValidation(formdate),\r\n      buttonDisabled: this.formValidation(\r\n        this.state.phoneNumberValid,\r\n        this.birthDateValidation(formdate),\r\n        this.state.foodChoiceError\r\n      )\r\n    });\r\n  };\r\n\r\n  foodChoiceValidity(data) {\r\n    if (data.length <= 2) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleChangeFoodChoice = event => {\r\n    this.setState({\r\n      foodChoice: event.target.value,\r\n      foodChoiceError: this.foodChoiceValidity(event.target.value),\r\n      buttonDisabled: this.formValidation(\r\n        this.state.phoneNumberValid,\r\n        this.state.birthDateError,\r\n        this.foodChoiceValidity(event.target.value)\r\n      )\r\n    });\r\n\r\n    const td = this.formValidation(\r\n      this.state.phoneNumberValid,\r\n      this.state.birthDateError,\r\n      this.foodChoiceValidity(event.target.value)\r\n    );\r\n\r\n    console.log(td);\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({ dropDownOpen: !this.state.dropDownOpen });\r\n  };\r\n\r\n  select = event => {\r\n    this.setState({\r\n      dropDownOpen: !this.state.dropDownOpen,\r\n      gender: event.target.innerText\r\n    });\r\n  };\r\n\r\n  formatDate = date => {\r\n    return moment(date).format(\"YYYY-MM-DD\");\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    let userGender = \"\";\r\n    if (this.state.gender === \"Male\") {\r\n      userGender = \"M\";\r\n    } else if (this.state.gender === \"Female\") {\r\n      userGender = \"F\";\r\n    }\r\n    this.props.updateProfileAbout(\r\n      this.props.userData.id,\r\n      this.props.userData.user_settings,\r\n      this.state.phoneNumber,\r\n      this.state.birthDate,\r\n      userGender,\r\n      this.state.foodChoice\r\n    );\r\n    this.setState({ loading: this.props.dataLoading });\r\n    this.handleRedirect();\r\n  };\r\n\r\n  handleRedirect() {\r\n    if (this.props.err === null || this.props.err === undefined) {\r\n      this.setState({ redirect: true });\r\n    }\r\n  }\r\n\r\n  setPrevState() {\r\n    this.setState({ phoneNumber: this.props.userData.name });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getProfileAbout();\r\n    console.log(this.props.userData);\r\n  }\r\n\r\n  getGender(gender) {\r\n    if (gender === \"F\") {\r\n      return \"Female\";\r\n    } else if (gender === \"M\") {\r\n      return \"Male\";\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.dataLoading !== true) {\r\n      if (this.state.loading !== false) {\r\n        console.log(\"joker\");\r\n        this.setState({\r\n          loading: false,\r\n          phoneNumber: this.props.userData.phone_number,\r\n          birthDate: this.props.userData.birth_date,\r\n          foodChoice: this.props.userData.what_you_crave_for,\r\n          gender: this.getGender(this.props.userData.gender)\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <EmptyNav />\r\n        <div className=\"overlay\"></div>\r\n        <div id=\"form-container\">\r\n          {this.props.dataLoading ? (\r\n            <Ripple color=\"#FFFFFF\" size={150} />\r\n          ) : this.state.redirect ? (\r\n            <Redirect to=\"/\" />\r\n          ) : (\r\n            <Card style={{ width: \"400px\" }}>\r\n              <CardHeader\r\n                className=\"font-weight-bold\"\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-evenly\",\r\n                  padding: \"10px\",\r\n                  fontSize: \"18pt\"\r\n                }}\r\n              >\r\n                Update Your Profile\r\n              </CardHeader>\r\n              <CardBody className=\"card-color\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n                  <Row form>\r\n                    <Col md={4}>\r\n                      <FormGroup style={{ paddingRight: \"10px\" }}>\r\n                        <Label style={{ display: \"flex\" }}>PhoneNumber</Label>\r\n                        <PhoneInput\r\n                          name=\"phone\"\r\n                          country={\"bd\"}\r\n                          placeholder=\"Enter phone number\"\r\n                          onChange={this.handleChangePhoneNumber}\r\n                          value={this.state.phoneNumber}\r\n                          autoFormat={false}\r\n                          enableLongNumbers={false}\r\n                          isValid={() => {\r\n                            return !this.state.phoneNumberValid;\r\n                          }}\r\n                        />\r\n                        <FormFeedback>Erroe</FormFeedback>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md={6}>\r\n                      <FormGroup>\r\n                        <Label for=\"exampleDate\">Birth Date</Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          name=\"date\"\r\n                          id=\"exampleDatetime\"\r\n                          placeholder=\"datetime placeholder\"\r\n                          value={this.state.birthDate}\r\n                          onChange={this.handleChangeBirthDate}\r\n                          invalid={this.state.birthDateError}\r\n                        />\r\n                        <FormFeedback>\r\n                          You must be 18 years old to register\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row form>\r\n                    <Col md={6}>\r\n                      <Label>Gender</Label>\r\n                      <Container>\r\n                        <Dropdown\r\n                          isOpen={this.state.dropDownOpen}\r\n                          toggle={this.toggle}\r\n                        >\r\n                          <DropdownToggle caret>\r\n                            {this.state.gender}\r\n                          </DropdownToggle>\r\n                          <DropdownMenu>\r\n                            <DropdownItem onClick={this.select}>\r\n                              Male\r\n                            </DropdownItem>\r\n                            <DropdownItem onClick={this.select}>\r\n                              Female\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </Dropdown>\r\n                      </Container>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <FormGroup>\r\n                        <Label>What you crave for</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          placeholder=\"Enter favourite food\"\r\n                          name=\"foodChoice\"\r\n                          value={this.state.foodChoice}\r\n                          onChange={this.handleChangeFoodChoice}\r\n                          invalid={this.state.foodChoiceError}\r\n                        />\r\n                        <FormFeedback>Enter valid food name</FormFeedback>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Button\r\n                    className=\"btn-lg btn-block\"\r\n                    id=\"button\"\r\n                    type=\"submit\"\r\n                    disabled={this.state.buttonDisabled}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                  <NavLink to=\"/\" style={{ textDecoration: \"none\" }}>\r\n                    <Button\r\n                      className=\"btn-lg btn-block btn-dark\"\r\n                      style={{ marginTop: \"10px\" }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </NavLink>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.dataReducer.data,\r\n    dataLoading: state.dataReducer.profileLoading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getProfileAbout: () => dispatch(dataActions.getUser()),\r\n    updateProfileAbout: (\r\n      userId,\r\n      settingsId,\r\n      phoneNumber,\r\n      birthDate,\r\n      gender,\r\n      favouriteFood\r\n    ) => {\r\n      dispatch(\r\n        dataActions.updateProfile(\r\n          userId,\r\n          settingsId,\r\n          phoneNumber,\r\n          birthDate,\r\n          gender,\r\n          favouriteFood\r\n        )\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile);\r\n","import React from \"react\";\r\nimport { Redirect, NavLink } from \"react-router-dom\";\r\nimport { Ripple } from \"react-spinners-css\";\r\nimport { Affix } from \"antd\";\r\nimport ImageUploader from \"react-images-upload\";\r\nimport * as actions from \"../redux_store/actions/dataAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, CardBody, Form, Button, CardHeader } from \"reactstrap\";\r\nimport EmptyNav from \"../components/EmptyNav\";\r\n\r\nclass UpdateProfilePhoto extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.state = {\r\n      imageData: [],\r\n      redirect: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getUserAbout();\r\n  }\r\n\r\n  handleChangeImage = event => {\r\n    this.setState({\r\n      imageData: this.state.imageData.concat(event)\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.imageData.length !== 0) {\r\n      this.props.updatePhoto(\r\n        this.props.userData.user_id,\r\n        this.props.userData.id,\r\n        this.state.imageData[0]\r\n      );\r\n      this.handleRedirect();\r\n    } else {\r\n      alert(\"set image first\");\r\n    }\r\n  };\r\n\r\n  handleRedirect() {\r\n    if (\r\n      this.props.err === null ||\r\n      this.props.err === undefined ||\r\n      this.props.loading === false\r\n    ) {\r\n      this.setState({ redirect: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Affix offsetTop={0}>\r\n          <EmptyNav />\r\n        </Affix>\r\n        <div className=\"overlay\"></div>\r\n        <div id=\"form-container\">\r\n          {this.props.dataLoading ? (\r\n            <Ripple color=\"FFFFFF\" size={200} />\r\n          ) : this.props.uploadLoading ? (\r\n            <Ripple color=\"FFFFFF\" size={200} />\r\n          ) : this.state.redirect ? (\r\n            <Redirect to=\"/\" />\r\n          ) : (\r\n            <Card style={{ padding: \"0px\" }}>\r\n              <div>\r\n                <CardHeader\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-evenly\",\r\n                    background: \"#FFFFFF\",\r\n                    color: \"black\",\r\n                    alignContent: \"center\",\r\n                    alignItems: \"center\"\r\n                  }}\r\n                >\r\n                  <h4>Select Profile Picture</h4>\r\n                </CardHeader>\r\n                <CardBody style={{ alignContent: \"center\" }}>\r\n                  <Form onSubmit={event => this.handleSubmit(event)} noValidate>\r\n                    <ImageUploader\r\n                      name=\"image\"\r\n                      withIcon={true}\r\n                      buttonText=\"Choose Image\"\r\n                      onChange={this.handleChangeImage}\r\n                      imgExtension={[\".jpg\", \".png\"]}\r\n                      maxFileSize={819200}\r\n                      singleImage={true}\r\n                      withLabel={false}\r\n                      withPreview={true}\r\n                      buttonStyles={{ background: \"#242424\" }}\r\n                      fileContainerStyle={{\r\n                        padding: \"0px\"\r\n                      }}\r\n                    />\r\n                    <Button\r\n                      type=\"submit\"\r\n                      id=\"normal_button\"\r\n                      className=\"btn-lg btn-block btn-dark\"\r\n                    >\r\n                      Update\r\n                    </Button>\r\n                    <NavLink to=\"/\" style={{ textDecoration: \"none\" }}>\r\n                      <Button\r\n                        className=\"btn-lg btn-block btn-dark\"\r\n                        style={{ marginTop: \"10px\" }}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </NavLink>\r\n                  </Form>\r\n                </CardBody>\r\n              </div>\r\n            </Card>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.dataReducer.data,\r\n    uploadLoading: state.dataReducer.submitImageLoading,\r\n    dataLoading: state.dataReducer.profileLoading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getUserAbout: () => {\r\n      dispatch(actions.getUser());\r\n    },\r\n    updatePhoto: (id, user_id, userImage) => {\r\n      dispatch(actions.updateImage(id, user_id, userImage));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateProfilePhoto);\r\n","import React from \"react\";\r\nimport { Affix } from \"antd\";\r\nimport NavBar from \"./Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport * as dataActions from \"../redux_store/actions/dataAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  FormControl,\r\n  InputGroup,\r\n  Button\r\n} from \"react-bootstrap\";\r\n\r\nclass RestaurantMenu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searcheItem: \"\",\r\n      menu: [],\r\n      menuAvail: false\r\n    };\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ searcheItem: event.target.value });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.menuAvail !== true) {\r\n      this.getRestMenu();\r\n      this.setState({ menuAvail: true });\r\n    }\r\n  }\r\n\r\n  getRestMenu() {\r\n    this.state.menu = this.props.restaurantMenu.map(data => (\r\n      <Col key={data.id} md={3}>\r\n        <Card\r\n          style={{\r\n            alignItems: \"left\",\r\n            padding: \"0px\",\r\n            margin: \"10px\",\r\n            width: \"20rem\",\r\n            overflow: \"hidden\",\r\n            alignContent: \"bottom\",\r\n            borderRadius: \"0\",\r\n            background: \"#242424\",\r\n            border: \"0px\"\r\n          }}\r\n        >\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={data.restaurant_image}\r\n            cap\r\n            height=\"200px\"\r\n            width=\"200px\"\r\n            style={{ borderRadius: 0 }}\r\n          />\r\n          <Card.ImgOverlay style={{ padding: \"0px\" }}>\r\n            <Card.Body style={{ padding: \"0px\" }}>\r\n              <h2\r\n                style={{\r\n                  color: \"#F99116\",\r\n                  fontStyle: \"bold\",\r\n                  padding: \"10px\"\r\n                }}\r\n              >\r\n                For {data.category_name}\r\n              </h2>\r\n\r\n              <div\r\n                className=\"card_background\"\r\n                style={{\r\n                  padding: \"15px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  position: \"relative\"\r\n                }}\r\n              >\r\n                <div style={{ padding: \"2px\" }}>\r\n                  Item name: {data.item_name}\r\n                </div>\r\n                <div style={{ padding: \"2px\" }}>Price: {data.price}</div>\r\n              </div>\r\n            </Card.Body>\r\n          </Card.ImgOverlay>\r\n        </Card>\r\n      </Col>\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Affix offsetTop={0}>\r\n          <NavBar />\r\n        </Affix>\r\n        <div style={{ margin: \"0px\", padding: \"0\" }}>\r\n          <Affix offsetTop={60}>\r\n            <Row\r\n              style={{\r\n                background: \"white\",\r\n                boxShadow: \"1px 1px 5px #242424\",\r\n                margin: \"0px\",\r\n                padding: \"10px\",\r\n                display: \"flex\"\r\n              }}\r\n            >\r\n              <Col md={4}>\r\n                <h2 style={{ color: \"#F99116\" }}>Restaurant Menu</h2>\r\n              </Col>\r\n            </Row>\r\n          </Affix>\r\n          <div className=\"restaurnat-scroll\">\r\n            <Row noGutters={true}>{this.state.menu}</Row>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    restaurantMenu: state.dataReducer.restMenu\r\n  };\r\n};\r\n\r\nconst mapDipatchToProps = dispatch => {\r\n  return {\r\n    getMenu: id => {\r\n      dispatch(dataActions.getRestaurantMenu(id));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(RestaurantMenu);\r\n","import React from \"react\";\r\nimport { Ripple, Ellipsis } from \"react-spinners-css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../redux_store/actions/dataAction\";\r\nimport { Navbar, NavbarBrand, Image } from \"react-bootstrap\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardHeader,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\nimport { message } from \"antd\";\r\n\r\nclass SetRestaurant extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirect: false,\r\n      restaurant: \"\",\r\n      food: \"\",\r\n      time: \"\",\r\n      dropDownOpen: false,\r\n      menuOpen: false,\r\n      timeOpen: false,\r\n      selectedRestaurant: \"Select Restaurant\",\r\n      selectedMenu: \"Select Item\",\r\n      selectedTime: \"Select Eating Time\",\r\n      availRestaurant: [],\r\n      updateRestaurant: false,\r\n      menuUpdate: false,\r\n      menuList: []\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.getUserProfile();\r\n    this.props.getExistedRestaurants();\r\n  }\r\n\r\n  createRestaurantList() {\r\n    this.setState({\r\n      availRestaurant: this.props.restaurants.map(data => (\r\n        <DropdownItem\r\n          key={data.id}\r\n          onClick={(event, id) => this.select(event, data.id)}\r\n        >\r\n          {data.name}\r\n        </DropdownItem>\r\n      ))\r\n    });\r\n  }\r\n\r\n  createRestaurantMenu = () => {\r\n    this.setState({\r\n      menuList: this.props.foodItemName.map(data => (\r\n        <DropdownItem key={data.id} onClick={event => this.selectMenu(event)}>\r\n          {data.item_name}\r\n        </DropdownItem>\r\n      ))\r\n    });\r\n  };\r\n\r\n  handleChangeRestaurantName = event => {\r\n    this.setState({ restaurant: event.target.value });\r\n  };\r\n\r\n  handleChangeFood = event => {\r\n    this.setState({ food: event.target.value });\r\n  };\r\n\r\n  handleChangeTime = event => {\r\n    this.setState({ time: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (\r\n      this.state.selectedRestaurant !== \"Select Restaurant\" &&\r\n      this.state.selectedMenu !== \"Select Item\" &&\r\n      this.state.selectedTime !== \"Select Eating Time\"\r\n    ) {\r\n      this.props.setRestSetting(\r\n        this.props.userId,\r\n        this.props.id,\r\n        this.state.selectedRestaurant,\r\n        this.state.selectedMenu,\r\n        this.state.selectedTime\r\n      );\r\n      this.setState({ redirect: true });\r\n    } else {\r\n      alert(\"Please set all the field\");\r\n    }\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({ dropDownOpen: !this.state.dropDownOpen });\r\n  };\r\n\r\n  select = (event, id) => {\r\n    this.setState({\r\n      dropDownOpen: !this.state.dropDownOpen,\r\n      selectedRestaurant: event.target.innerText,\r\n      menuUpdate: true,\r\n      selectedMenu: \"Select Item\"\r\n    });\r\n    this.props.getMenu(id);\r\n  };\r\n\r\n  toggleMenu = () => {\r\n    this.setState({ menuOpen: !this.state.menuOpen });\r\n  };\r\n\r\n  selectMenu = event => {\r\n    this.setState({\r\n      menuOpen: !this.state.menuOpen,\r\n      selectedMenu: event.target.innerText\r\n    });\r\n  };\r\n\r\n  toggleTime = () => {\r\n    this.setState({ timeOpen: !this.state.timeOpen });\r\n  };\r\n\r\n  selectTime = event => {\r\n    this.setState({\r\n      timeOpen: !this.state.timeOpen,\r\n      selectedTime: event.target.innerText\r\n    });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.loading !== true) {\r\n      if (this.state.updateRestaurant !== true) {\r\n        this.createRestaurantList();\r\n        this.setState({ updateRestaurant: true });\r\n      }\r\n    }\r\n\r\n    if (this.props.menuLoading !== true) {\r\n      if (this.state.menuUpdate !== false) {\r\n        this.createRestaurantMenu();\r\n        this.setState({ menuUpdate: false });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Navbar id=\"navtheme\" fixed=\"top\">\r\n          <NavbarBrand>\r\n            <Image\r\n              src={require(\"../Images/logo.png\")}\r\n              height=\"39px\"\r\n              width=\"150px\"\r\n              style={{ paddingLeft: \"15px\" }}\r\n            />\r\n          </NavbarBrand>\r\n        </Navbar>\r\n        <div className=\"overlay\"></div>\r\n        <div id=\"form-container\">\r\n          {this.props.settingLoading ? (\r\n            <Ripple color=\"#FFFFFF\" size={200} />\r\n          ) : this.state.redirect ? (\r\n            <Redirect to=\"/setimage\" />\r\n          ) : (\r\n            <Card>\r\n              <CardHeader\r\n                className=\"font-weight-bold\"\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-evenly\",\r\n                  padding: \"10px\",\r\n                  fontSize: \"18pt\"\r\n                }}\r\n              >\r\n                Set Where,When and What to Eat\r\n              </CardHeader>\r\n              <CardBody className=\"card-color\">\r\n                <Form\r\n                  onSubmit={this.handleSubmit}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\"\r\n                  }}\r\n                >\r\n                  <Row style={{ margin: \"10px\" }}>\r\n                    <Col md={12}>\r\n                      {this.props.loading ? (\r\n                        <Ellipsis color=\"#F99116\" size={25} />\r\n                      ) : (\r\n                        <Dropdown\r\n                          isOpen={this.state.dropDownOpen}\r\n                          toggle={this.toggle}\r\n                        >\r\n                          <DropdownToggle caret>\r\n                            {this.state.selectedRestaurant}\r\n                          </DropdownToggle>\r\n                          <DropdownMenu>\r\n                            {this.state.availRestaurant}\r\n                          </DropdownMenu>\r\n                        </Dropdown>\r\n                      )}\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    style={{\r\n                      margin: \"10px\"\r\n                    }}\r\n                  >\r\n                    <Col md={12}>\r\n                      <Dropdown\r\n                        isOpen={this.state.menuOpen}\r\n                        toggle={this.toggleMenu}\r\n                      >\r\n                        <DropdownToggle caret>\r\n                          {this.state.selectedMenu}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>{this.state.menuList}</DropdownMenu>\r\n                      </Dropdown>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row\r\n                    style={{\r\n                      margin: \"10px\"\r\n                    }}\r\n                  >\r\n                    <Col md={12}>\r\n                      <Dropdown\r\n                        isOpen={this.state.timeOpen}\r\n                        toggle={this.toggleTime}\r\n                      >\r\n                        <DropdownToggle caret>\r\n                          {this.state.selectedTime}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                          <DropdownItem onClick={this.selectTime}>\r\n                            Breakfast\r\n                          </DropdownItem>\r\n                          <DropdownItem onClick={this.selectTime}>\r\n                            Lunch\r\n                          </DropdownItem>\r\n                          <DropdownItem onClick={this.selectTime}>\r\n                            Dinner\r\n                          </DropdownItem>\r\n                          <DropdownItem onClick={this.selectTime}>\r\n                            Snack\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </Dropdown>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Button\r\n                    className=\"btn-lg btn-block\"\r\n                    id=\"button\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Next\r\n                  </Button>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userId: state.dataReducer.data.user_id,\r\n    id: state.dataReducer.data.id,\r\n    settingLoading: state.dataReducer.resSettingLoading,\r\n    restaurants: state.dataReducer.restaurants,\r\n    loading: state.dataReducer.dataLoading,\r\n    foodItemName: state.dataReducer.restMenu,\r\n    menuLoading: state.dataReducer.restaurantMenuLoading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setRestSetting: (userId, Id, name, item, time) => {\r\n      dispatch(actions.setRestaurantChoice(userId, Id, name, item, time));\r\n    },\r\n    getUserProfile: () => {\r\n      dispatch(actions.getUser());\r\n    },\r\n    getExistedRestaurants: () => {\r\n      dispatch(actions.getRestaurants());\r\n    },\r\n    getMenu: restaurantId => {\r\n      dispatch(actions.getRestaurantMenu(restaurantId));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetRestaurant);\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Restaurants from \"./components/Restaurants\";\r\nimport LoginForm from \"./Containers/LoginForm\";\r\nimport SignupLayout from \"./Containers/SignupLayout\";\r\nimport Profile from \"./components/Profile\";\r\nimport Info from \"./components/profileInfo\";\r\nimport SetImage from \"./components/SetImage\";\r\nimport Connections from \"./components/Connections\";\r\nimport FriendRequests from \"./components/FriendRequest\";\r\nimport EditProfile from \"./Containers/EditProfile\";\r\nimport UpdateProfilePhoto from \"./Containers/UpdateProfilePhoto\";\r\nimport RestaurantMenu from \"./components/RestaurantMenu\";\r\nimport SetRestaurant from \"./components/SetRestaurant\";\r\n\r\nexport const BaseRouter = () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={Profile} />\r\n    <Route exact path=\"/editprofile\" component={EditProfile} />\r\n    <Route exact path=\"/restaurants\" component={Restaurants} />\r\n    <Route exact path=\"/setrestaurant\" component={SetRestaurant} />\r\n    <Route\r\n      exact\r\n      path=\"/restaurants/restaurantmenu\"\r\n      component={RestaurantMenu}\r\n    />\r\n    <Route exact path=\"/connections\" component={Connections} />\r\n    <Route exact path=\"/friendrequest\" component={FriendRequests} />\r\n    <Route exact path=\"/updateimage\" component={UpdateProfilePhoto} />\r\n    <Route exact path=\"/profileinfo\" component={Info} />\r\n    <Route exact path=\"/setimage\" component={SetImage} />\r\n  </Switch>\r\n);\r\n\r\nexport const AuthRouter = () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={LoginForm} />\r\n    <Route exact path=\"/signup\" component={SignupLayout} />\r\n  </Switch>\r\n);\r\n","import React from \"react\";\r\nimport { BaseRouter, AuthRouter } from \"./routes\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"./redux_store/actions/authenticate\";\r\nimport { DualRing } from \"react-spinners-css\";\r\nimport { Card } from \"react-bootstrap\";\r\n// import ClassicFormPage from \"./Containers/Front\";\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.autoSignUp();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <div />\r\n          {this.props.isAuthenticated ? (\r\n            this.props.isLoading ? (\r\n              <Card>\r\n                <DualRing />\r\n              </Card>\r\n            ) : (\r\n              <BaseRouter />\r\n            )\r\n          ) : (\r\n            <AuthRouter />\r\n          )}\r\n          <div />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.authenticate.token !== null,\r\n    isLoading: state.authenticate.loading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    autoSignUp: () => dispatch(actions.authCheckstate())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties\r\n  };\r\n};\r\n","import * as actionType from \"../actions/actionType\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  error: false,\r\n  loading: false\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.token,\r\n    error: null,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: true,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n  return updateObject(state, {\r\n    token: null\r\n  });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionType.AUTH_START:\r\n      return authStart(state, action);\r\n    case actionType.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionType.AUTH_LOGOUT:\r\n      return authLogout(state, action);\r\n    case actionType.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionType from \"../actions/actionType\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  image: {},\r\n  resSetting: {},\r\n  restaurants: [],\r\n  restMenu: [],\r\n  dataError: null,\r\n  dataLoading: false,\r\n  profileLoading: false,\r\n  imageLoading: false,\r\n  submitImageLoading: false,\r\n  resSettingLoading: false,\r\n  restaurantMenuLoading: false\r\n};\r\n\r\nconst restaurantProccessStart = (state, action) => {\r\n  return updateObject(state, {\r\n    dataError: null,\r\n    resSettingLoading: true\r\n  });\r\n};\r\n\r\nconst restaurantProccessSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    dataError: null,\r\n    resSettingLoading: false,\r\n    resSetting: action.data.data\r\n  });\r\n};\r\n\r\nconst getDataStart = (state, action) => {\r\n  return updateObject(state, {\r\n    dataError: null,\r\n    dataLoading: true\r\n  });\r\n};\r\n\r\nconst profileDataStart = (state, action) => {\r\n  return updateObject(state, {\r\n    dataError: null,\r\n    profileLoading: true\r\n  });\r\n};\r\n\r\nconst profileDataSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    data: action.data.data,\r\n    dataError: null,\r\n    profileLoading: false\r\n  });\r\n};\r\n\r\nconst getDataSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    dataError: null,\r\n    dataLoading: false\r\n  });\r\n};\r\n\r\nconst getDataFail = (state, action) => {\r\n  return updateObject(state, {\r\n    dataError: action.error,\r\n    dataLoading: false,\r\n    profileLoading: false\r\n  });\r\n};\r\n\r\nconst getUserData = (state, action) => {\r\n  return updateObject(state, {\r\n    data: action.data.data,\r\n    dataLoading: false\r\n  });\r\n};\r\n\r\nconst setImageStart = (state, action) => {\r\n  return updateObject(state, {\r\n    submitImageLoading: true\r\n  });\r\n};\r\n\r\nconst setImageSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    image: action.image.data,\r\n    submitImageLoading: false\r\n  });\r\n};\r\n\r\nconst getImageDataStart = (state, action) => {\r\n  return updateObject(state, {\r\n    imageLoading: true\r\n  });\r\n};\r\n\r\nconst getImageDataSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    image: action.image.data,\r\n    imageLoading: false\r\n  });\r\n};\r\n\r\nconst getRestaurants = (state, action) => {\r\n  return updateObject(state, {\r\n    restaurants: action.data,\r\n    dataLoading: false\r\n  });\r\n};\r\n\r\nconst getRestaurantsMenuStart = (state, action) => {\r\n  return updateObject(state, {\r\n    dataError: null,\r\n    restaurantMenuLoading: true\r\n  });\r\n};\r\n\r\nconst getRestaurantsMenuSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    restMenu: action.data,\r\n    restaurantMenuLoading: false\r\n  });\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionType.GET_DATA_START:\r\n      return getDataStart(state, action);\r\n    case actionType.PROFILE_DATA_START:\r\n      return profileDataStart(state, action);\r\n    case actionType.PROFILE_DATA_SUCCESS:\r\n      return profileDataSuccess(state, action);\r\n    case actionType.GET_DATA_SUCCESS:\r\n      return getDataSuccess(state, action);\r\n    case actionType.GET_DATA_FAIL:\r\n      return getDataFail(state, action);\r\n    case actionType.GET_DATA:\r\n      return getUserData(state, action);\r\n    case actionType.SET_IMAGE_START:\r\n      return setImageStart(state, action);\r\n    case actionType.SET_IMAGE_SUCCESS:\r\n      return setImageSuccess(state, action);\r\n    case actionType.GET_IMAGE_DATA_START:\r\n      return getImageDataStart(state, action);\r\n    case actionType.GET_IMAGE_DATA_SUCCESS:\r\n      return getImageDataSuccess(state, action);\r\n    case actionType.GET_RESTAURANTS_DATA:\r\n      return getRestaurants(state, action);\r\n    case actionType.GET_RESTAURANTS_MENU_START:\r\n      return getRestaurantsMenuStart(state, action);\r\n    case actionType.GET_RESTAURANTS_MENU_SUCCESS:\r\n      return getRestaurantsMenuSuccess(state, action);\r\n    case actionType.REST_SETTING_START:\r\n      return restaurantProccessStart(state, action);\r\n    case actionType.REST_SETTING_SUCCESS:\r\n      return restaurantProccessSuccess(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import * as actionType from \"../actions/actionType\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  suggestion: [],\r\n  filterInfo: {},\r\n  filterError: null,\r\n  filterLoading: false,\r\n  filterDataLoading: false,\r\n  filterUpdateLoading: false\r\n};\r\n\r\nconst getFilteredStart = (state, action) => {\r\n  return updateObject(state, {\r\n    filterError: null,\r\n    filterLoading: true\r\n  });\r\n};\r\n\r\nconst getFilterSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    suggestion: action.suggestion.data,\r\n    filterError: null,\r\n    filterLoading: false\r\n  });\r\n};\r\n\r\nconst setFilterStart = (state, action) => {\r\n  return updateObject(state, {\r\n    filterError: null,\r\n    filterUpdateLoading: true\r\n  });\r\n};\r\n\r\nconst setFilterSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    filterInfo: action.filterInfo.data,\r\n    filterError: null,\r\n    filterUpdateLoading: false\r\n  });\r\n};\r\n\r\nconst getFilterSetting = (state, action) => {\r\n  return updateObject(state, {\r\n    filterInfo: action.filterInfo.data,\r\n    filterError: null,\r\n    filterDataLoading: false\r\n  });\r\n};\r\n\r\nconst getFilterSettingStart = (state, action) => {\r\n  return updateObject(state, {\r\n    filterError: null,\r\n    filterDataLoading: true\r\n  });\r\n};\r\n\r\nconst filterFail = (state, action) => {\r\n  return updateObject(state, {\r\n    filterError: action.error,\r\n    filterLoading: false\r\n  });\r\n};\r\n\r\nconst filterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionType.GET_FILTER_START:\r\n      return getFilteredStart(state, action);\r\n    case actionType.GET_FILTER_SETTING_START:\r\n      return getFilterSettingStart(state, action);\r\n    case actionType.GET_FILTER_SUCCESS:\r\n      return getFilterSuccess(state, action);\r\n    case actionType.SET_FILTER_START:\r\n      return setFilterStart(state, action);\r\n    case actionType.SET_FILTER_SUCCESS:\r\n      return setFilterSuccess(state, action);\r\n    case actionType.GET_FILTER_FAIL:\r\n      return filterFail(state, action);\r\n    case actionType.GET_FILTER_SETTING:\r\n      return getFilterSetting(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filterReducer;\r\n","import * as actionType from \"../actions/actionType\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  friendList: [],\r\n  requestList: [],\r\n  dataError: null,\r\n  dataLoading: false\r\n};\r\n\r\nconst getListStart = (state, action) => {\r\n  return updateObject(state, {\r\n    dataError: null,\r\n    dataLoading: true\r\n  });\r\n};\r\n\r\nconst requestStart = (state, action) => {\r\n  return updateObject(state, {\r\n    dataError: null,\r\n    dataLoading: true\r\n  });\r\n};\r\n\r\nconst requestSuccesss = (state, action) => {\r\n  return updateObject(state, {\r\n    dataError: null,\r\n    dataLoading: false\r\n  });\r\n};\r\n\r\nconst requestFail = (state, action) => {\r\n  return updateObject(state, {\r\n    dataError: action.error,\r\n    dataLoading: false\r\n  });\r\n};\r\n\r\nconst getListSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    friendList: action.friendList,\r\n    dataError: null,\r\n    dataLoading: false\r\n  });\r\n};\r\n\r\nconst getRequestListSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    requestList: action.requestList,\r\n    dataError: null,\r\n    dataLoading: false\r\n  });\r\n};\r\n\r\nconst getListFail = (state, action) => {\r\n  return updateObject(state, {\r\n    dataError: action.error,\r\n    dataLoading: false\r\n  });\r\n};\r\n\r\nconst friendRequestReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionType.GET_LIST:\r\n      return getListStart(state, action);\r\n    case actionType.GET_LIST_SUCCESS:\r\n      return getListSuccess(state, action);\r\n    case actionType.GET_LIST_FAIL:\r\n      return getListFail(state, action);\r\n    case actionType.GET_REQUEST_LIST_SUCCESS:\r\n      return getRequestListSuccess(state, action);\r\n    case actionType.REQUEST_START:\r\n      return requestStart(state, action);\r\n    case actionType.REQUEST_SUCCESS:\r\n      return requestSuccesss(state, action);\r\n    case actionType.REQUEST_FAIL:\r\n      return requestFail(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default friendRequestReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport \"react-input-range/lib/css/index.css\";\r\nimport \"./Styles/header.css\";\r\n\r\nimport reducer from \"./redux_store/reducers/authenticate\";\r\nimport dataReducer from \"./redux_store/reducers/dataReducer\";\r\nimport filterReducer from \"./redux_store/reducers/filterReducer\";\r\nimport friendRequestReducer from \"./redux_store/reducers/friendRequestReducer\";\r\n\r\nconst masterReducer = combineReducers({\r\n  authenticate: reducer,\r\n  dataReducer: dataReducer,\r\n  filterReducer: filterReducer,\r\n  friendRequestReducer: friendRequestReducer\r\n});\r\n\r\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  masterReducer,\r\n  composeEnhances(applyMiddleware(thunk))\r\n);\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.db0018cc.png\";"],"sourceRoot":""}